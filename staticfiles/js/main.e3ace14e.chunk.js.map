{"version":3,"sources":["components/top-section/search.jsx","components/top-section/nav.jsx","components/middle-section/featured.jsx","components/bottom-section/footer.jsx","components/top-section/register.jsx","components/top-section/login.jsx","components/top-section/cart.jsx","components/top-section/contact-us.jsx","components/middle-section/new-arrivals.jsx","components/middle-section/products.jsx","components/product-details.jsx","components/middle-section/search-results.jsx","components/index.jsx","services/logout.js","App.js","serviceWorker.js","index.js"],"names":["Search","handleSearchSubmit","event","preventDefault","_this","props","onSearchInputSubmit","refs","searchinput","value","replace","handleBlur","setAttribute","cartRef","searchexit","handleSearchClick","focus","react_default","a","createElement","Fragment","className","onSubmit","this","index_es","icon","faSearch","onClick","type","name","onBlur","placeholder","ref","autoFocus","faTimes","Component","Nav","redirect","history","handleLinkClick","url","location","pathname","cart","cartQuantity","cartProducts","quantity","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","product","parseInt","err","return","handleMenuClick","onMenuClick","handleLogout","onUserLogout","_this2","products","userAuthenticated","id","faBars","onLinkClick","search","onSearchClick","navRef","nav","faShoppingCart","Featured","state","selectValues","updated","setSelectValues","Object","objectSpread","featuredProducts","forEach","product_id","setState","handleQuantityChange","map","num","key","length","react_router_dom","to","title","src","imgUrl","alt","price","onChange","currentTarget","returnSelectElements","onAddToCart","Footer","Register","username","first_name","last_name","email","password","handleSubmit","fetch","headers","Content-Type","mode","method","body","JSON","stringify","then","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","json","data","confirm_password","confirm_email","localStorage","setItem","onUserLogin","alert","concat","stop","_x","apply","arguments","handleChange","defineProperty","target","django_react_csrftoken_default","defaultValue","footer","Login","csrftoken","Cookies","get","X-CSRFToken","csrfToken","credentials","console","log","Cart","returnOptionElements","optionElements","i","element","push","handleSelectChange","onQuantityUpdate","returnCartTotal","total","style","height","ContactUs","form","rows","cols","NewArrivals","counter","getSlideImages","filter","newarrival","handleNextClick","newarrivals","childNodes","index","firstChild","handlePrevClick","loading","faArrowAltCircleLeft","faArrowAltCircleRight","Products","selectedProducts","handleCategoryClick","selectedCategory","toConsumableArray","category","onCategoryChange","_this3","producct_id","_templateObject","ProductDetails","SearchResults","searchedProducts","_this$props","searchInput","toLowerCase","includes","Index","newArrivals","menuOn","mounted","handleClick","window","innerWidth","handleSelectClick","navContainer","document","getElementById","display","handleAddToCart","foundProduct","find","prod","Accept","reload","parse","getItem","handleQuantityUpdate","difference","handleSearchInput","handleCategoryChange","homePageComponents","featured","new_arrivals","onProductClick","handleProductClick","handleUserLogin","handleUserLogout","menuOnAuthenticationItems","fields","status","_this$state","react_router","path","component","search_results","assign","register","login","middle_section_products","contact_us","product_details","from","App","components","Boolean","hostname","match","ReactDOM","render","src_App_0","WebFont","load","google","families","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qOAsEeA,6MAjEXC,mBAAqB,SAAAC,GACjBA,EAAMC,iBACNC,EAAKC,MAAMC,oBAAoBF,EAAKG,KAAKC,YAAYC,OACrDL,EAAKC,MAAMK,QAAQ,mBAGvBC,WAAa,WAETP,EAAKG,KAAKC,YAAYI,aAAa,QAAS,gBAC5CR,EAAKC,MAAMQ,QAAQD,aAAa,QAAS,wBACzCR,EAAKG,KAAKO,WAAWF,aAAa,QAAS,mBAO/CG,kBAAoB,WAEhBX,EAAKG,KAAKC,YAAYI,aAAa,QAAS,wBAC5CR,EAAKG,KAAKC,YAAYQ,QACtBZ,EAAKG,KAAKO,WAAWF,aAAa,QAAS,wBAC3CR,EAAKC,MAAMQ,QAAQD,aAAa,QAAS,yFAazC,OACIK,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,QAAME,UAAU,cAAcC,SAAUC,KAAKtB,oBACzCgB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIH,UAAU,cACVI,KAAMC,IACNC,QAASJ,KAAKR,oBAElBE,EAAAC,EAAAC,cAAA,SACIE,UAAU,eACVO,KAAK,SACLC,KAAK,SACLC,OAAQP,KAAKZ,WACboB,YAAY,kBACZC,IAAI,cACJC,WAAS,IAEbhB,EAAAC,EAAAC,cAAA,OAAKa,IAAI,aAAaX,UAAU,yBAC5BJ,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIH,UAAU,cACVI,KAAMS,IACNP,QAASJ,KAAKZ,uBAzDrBwB,aCqINC,6MAnIXC,SAAWjC,EAAKC,MAAMiC,QAAQ5B,UAC9B6B,gBAAkB,SAAAC,GACVpC,EAAKC,MAAMiC,QAAQG,SAASC,WAAaF,GAAKpC,EAAKiC,SAASG,MAKpEzB,kBAAoB,WAChBX,EAAKG,KAAKoC,KAAK/B,aAAa,QAAS,mBAOzCgC,aAAe,WACX,IAAMC,EAAezC,EAAKC,MAAMwC,aAC5BC,EAAW,EAFEC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAGjB,QAAAC,EAAAC,EAAoBP,EAApBQ,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAkC,KAAzBU,EAAyBN,EAAA1C,MAC9BqC,GAAYY,SAASD,EAAQX,WAJhB,MAAAa,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAK,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAZ,EAAA,MAAAC,GAMjB,OAAOH,KAGXe,gBAAkB,WACdzD,EAAKC,MAAMyD,iBAGfC,aAAe,WACX3D,EAAKC,MAAM2D,eACX5D,EAAKC,MAAMiC,QAAQ5B,QAAQ,sFAKtB,IAAAuD,EAAA1C,KACGgB,EAAqChB,KAArCgB,gBAAiBsB,EAAoBtC,KAApBsC,gBACjBK,EAAa3C,KAAKlB,MAAlB6D,SACR,OAAK3C,KAAKlB,MAAM8D,kBA+CRlD,EAAAC,EAAAC,cAAA,OAAKiD,GAAG,YACJnD,EAAAC,EAAAC,cAAA,MAAIE,UAAU,WAAWW,IAAI,OACzBf,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YAAYM,QAAS,kBAAMkC,MACrC5C,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAiBC,KAAM4C,OAE3BpD,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACdJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACVM,QAAS,kBAAMsC,EAAK5D,MAAMiE,YAAY,WAD1C,SAGArD,EAAAC,EAAAC,cAAA,MAAIE,UAAU,gBACVM,QAAS,kBAAMY,EAAgB,oBADnC,YAGAtB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eAAeM,QAAS,kBAAMsC,EAAKF,iBAAjD,UAGA9C,EAAAC,EAAAC,cAAA,MAAIE,UAAU,kBACVM,QAAS,kBAAMY,EAAgB,sBADnC,cAGAtB,EAAAC,EAAAC,cAACoD,EAAD,CACIjE,oBAAqBiB,KAAKlB,MAAMC,oBAChCkE,cAAejD,KAAKR,kBACpBF,QAASU,KAAKhB,KAAKoC,KACnB8B,OAAQlD,KAAKhB,KAAKmE,IAClBR,SAAUA,EACVxD,QAASa,KAAKlB,MAAMiC,QAAQ5B,UAEhCO,EAAAC,EAAAC,cAAA,OAAKa,IAAI,OAAOX,UAAU,aACtBJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aACTM,QAAS,kBAAMsC,EAAK5D,MAAMiE,YAAY,gBAD1C,UACiE/C,KAAKqB,eADtE,KAIA3B,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,KAAMkD,IACNtD,UAAU,YACVM,QAAS,kBAAMsC,EAAK5D,MAAMiE,YAAY,kBAG9CrD,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAlFtBJ,EAAAC,EAAAC,cAAA,OAAKiD,GAAG,YACJnD,EAAAC,EAAAC,cAAA,MAAIE,UAAU,WAAWW,IAAI,OACzBf,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YAAYM,QAAS,kBAAMkC,MACrC5C,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAiBC,KAAM4C,OAE3BpD,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACdJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACVM,QAAS,kBAAMsC,EAAK5D,MAAMiE,YAAY,WAD1C,SAGArD,EAAAC,EAAAC,cAAA,MAAIE,UAAU,gBACVM,QAAS,kBAAMY,EAAgB,oBADnC,YAGItB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eACdM,QAAS,kBAAMsC,EAAK1B,gBAAgB,iBADpC,YAEJtB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eACVM,QAAS,kBAAMsC,EAAK1B,gBAAgB,oBADxC,WAGAtB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,kBACVM,QAAS,kBAAMY,EAAgB,sBADnC,cAGAtB,EAAAC,EAAAC,cAACoD,EAAD,CACIjE,oBAAqBiB,KAAKlB,MAAMC,oBAChCkE,cAAejD,KAAKR,kBACpBF,QAASU,KAAKhB,KAAKoC,KACnB8B,OAAQlD,KAAKhB,KAAKmE,IAClBR,SAAUA,EACVxD,QAASa,KAAKlB,MAAMiC,QAAQ5B,UAEhCO,EAAAC,EAAAC,cAAA,OAAKa,IAAI,OAAOX,UAAU,aACtBJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aACTM,QAAS,kBAAMsC,EAAK5D,MAAMiE,YAAY,gBAD1C,UACiE/C,KAAKqB,eADtE,KAIA3B,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,KAAMkD,IACNtD,UAAU,YACVM,QAAS,kBAAMsC,EAAK5D,MAAMiE,YAAY,kBAG9CrD,EAAAC,EAAAC,cAAA,MAAIE,UAAU,qBAhFpBc,4BC0FHyC,6MApFXC,MAAQ,CACJC,aAAc,GACdC,SAAS,KAmCbC,gBAAkB,WACd,IAAIF,EAAYG,OAAAC,EAAA,EAAAD,CAAA,GAAQ7E,EAAKyE,MAAMC,cACnC1E,EAAKC,MAAM8E,iBAAiBC,QAAQ,SAAA3B,GAChCqB,EAAarB,EAAQ4B,YAAc,IAEvCjF,EAAKkF,SAAS,CAAER,oBAIpBS,qBAAuB,SAACnB,EAAItB,GACxB,IAAIgC,EAAYG,OAAAC,EAAA,EAAAD,CAAA,GAAQ7E,EAAKyE,MAAMC,cACnCA,EAAaV,GAAMV,SAASZ,GAC5B1C,EAAKkF,SAAS,CAAER,wGApChB,MANc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACpBU,IAAI,SAAAC,GAAG,OACzBxE,EAAAC,EAAAC,cAAA,UAAQV,MAAOgF,EAAKC,IAAKD,GACpBA,kDAUJlE,KAAKsD,MAAME,SAAWxD,KAAKlB,MAAM8E,iBAAiBQ,OAAS,IAC5DpE,KAAKyD,kBACLzD,KAAK+D,SAAS,CAAEP,SAAS,mDAQxBxD,KAAKsD,MAAME,SAAWxD,KAAKlB,MAAM8E,iBAAiBQ,OAAS,IAC5DpE,KAAKyD,kBACLzD,KAAK+D,SAAS,CAAEP,SAAS,sCAoBxB,IAAAd,EAAA1C,KAEL,OACIN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACVE,KAAKlB,MAAM8E,iBAAiBK,IAAI,SAAA/B,GAAO,OACpCxC,EAAAC,EAAAC,cAAA,OAAKuE,IAAKjC,EAAQ4B,YACdpE,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAMC,GAAI,CAAEnD,SAAU,uBAAwBmC,MAAO,CAAEpB,UAASqC,MAAOrC,EAAQ4B,cAC3EpE,EAAAC,EAAAC,cAAA,OAAK4E,IAAKtC,EAAQuC,OAAQC,IAAKxC,EAAQqC,MAAOzE,UAAU,mBAE5DJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,mBAAWsC,EAAQyC,MAAnB,MAEJjF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,UAAQgF,SAAU,SAAAjG,GAAW+D,EAAKsB,qBAAqB9B,EAAQ4B,WAAYnF,EAAMkG,cAAc3F,SAC1FwD,EAAKoC,yBAGdpF,EAAAC,EAAAC,cAAA,UACIE,UAAU,qBACVM,QAAS,WAAQsC,EAAK5D,MAAMiG,YAAY7C,EAASQ,EAAKY,MAAMC,aAAarB,EAAQ4B,eAFrF,cAGIpE,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAiBH,UAAU,mBAAmBI,KAAMkD,IAChDhD,QAAS,kBAAMsC,EAAK5D,MAAMiG,YAAY7C,EAASQ,EAAKY,MAAMC,aAAarB,EAAQ4B,6BA/E5FlD,8CCgBRoE,mLAjBP,OACItF,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACXJ,EAAAC,EAAAC,cAAA,2BACqBF,EAAAC,EAAAC,cAAA,4BADrB,0BAGAF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAMC,GAAG,KAAT,oBACA5E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAMC,GAAG,KAAT,kBACA5E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAMC,GAAG,KAAT,yBAXH1D,8BC0XNqE,6MAxXX3B,MAAQ,CACJ4B,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,MAAO,GACPC,SAAU,MAGdC,aAAe,SAAA5G,GACXA,EAAMC,iBACN4G,MAAM,cAAe,CACjBC,QAAS,CAAEC,eAAgB,oBAC3BC,KAAM,cACNC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjBb,SAAUrG,EAAKyE,MAAM4B,SACrBC,WAAYtG,EAAKyE,MAAM6B,WACvBC,UAAWvG,EAAKyE,MAAM8B,UACtBC,MAAOxG,EAAKyE,MAAM+B,MAClBC,SAAUzG,EAAKyE,MAAMgC,aAE1BU,KAXH,eAAAC,EAAAvC,OAAAwC,EAAA,EAAAxC,CAAAyC,EAAAxG,EAAAyG,KAWS,SAAAC,EAAMC,GAAN,OAAAH,EAAAxG,EAAA4G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAxE,MAAA,cAAAwE,EAAAxE,KAAA,EACCsE,EAASI,OAAOV,KAAK,SAAAW,GACV,UAATA,GACa,CACT9H,EAAKG,KAAKkG,SACVrG,EAAKG,KAAKsG,SACVzG,EAAKG,KAAK4H,iBACV/H,EAAKG,KAAKqG,MACVxG,EAAKG,KAAK6H,cACVhI,EAAKG,KAAKmG,WACVtG,EAAKG,KAAKoG,WAETvB,QAAQ,SAAApD,GAAG,OAAKA,EAAIvB,MAAQ,KAGjC4H,aAAaC,QAAQ,UAAU,GAC/BlI,EAAKC,MAAMkI,cACXC,MAAK,4BAAAC,OAA6BrI,EAAKyE,MAAM6B,aAE7CtG,EAAKC,MAAMiC,QAAQ5B,QAAQ,MAE3B8H,MAAM,+BArBT,wBAAAT,EAAAW,SAAAd,MAXT,gBAAAe,GAAA,OAAAnB,EAAAoB,MAAArH,KAAAsH,YAAA,OA4CJC,aAAe,SAAA5I,GACXE,EAAKkF,SAALL,OAAA8D,EAAA,EAAA9D,CAAA,GACK/E,EAAM8I,OAAOnH,KAAO3B,EAAM8I,OAAOvI,iFAKtC,OACIQ,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,QAAMG,SAAUC,KAAKuF,cACjB7F,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAD,MACAD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,SACIS,KAAK,OACLG,YAAY,gBACZC,IAAI,aACJH,KAAK,aACLsE,SAAU5E,KAAKuH,eAEnB7H,EAAAC,EAAAC,cAAA,SACIS,KAAK,OACLG,YAAY,gBACZC,IAAI,YACJH,KAAK,YACLsE,SAAU5E,KAAKuH,gBAGvB7H,EAAAC,EAAAC,cAAA,UAAQE,UAAU,iBAAiB6H,aAAa,iBAC5CjI,EAAAC,EAAAC,cAAA,UAAQV,MAAM,eAAd,eACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,kBAAd,kBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,aAAd,cACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,uBAAd,uBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,aAAd,aACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,aAAd,aACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,cAAd,cACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,cAAd,cACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,0BAAd,0BACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,iBAAd,iBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,kCAAd,kCACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,qBAAd,qBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,gBAAd,gBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,cAAd,cACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,kBAAd,kBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,4BAAd,4BACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,QAAd,QACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,oBAAd,oBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,iBAAd,2BACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,yCACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,gBAAd,gBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,cAAd,cACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,iBAAd,iBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,sBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,QAAd,QACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,kBAAd,kBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,sBAAd,sBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,cAAd,cACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,eAAd,eACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,qBAAd,qBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,oBAAd,+BACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,iBAAd,iBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,QAAd,QACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,uBAAd,wBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,iBAAd,iBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,oBAAd,oBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,+BAAd,+BACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,aAAd,aACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,aAAd,aACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,cAAd,cACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,QAAd,QACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,aAAd,aACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,iBAAd,iBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,8BAAd,+BACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,iCACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,aAAd,aACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,aAAd,aACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,QAAd,8BACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,QAAd,QACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,cAAd,cACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,yCAAd,0CACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,sBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,cAAd,cACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,OAAd,oCACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,0BAAd,0BACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,iBAAd,iBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,aAAd,aACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,cAAd,cACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,aAAd,8CACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,cAAd,cACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,QAAd,QACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,oBAAd,oBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,cAAd,cACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,cAAd,cACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,aAAd,aACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,cAAd,mCACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,wBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,cAAd,cACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,cAAd,cACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,eAAd,eACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,wBAAd,wBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,iBAAd,iBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,eAAd,eACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,aAAd,aACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,QAAd,QACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,kBAAd,kBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,4BAAd,4BACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,QAAd,QACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,oBAAd,oBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,QAAd,QACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,eAAd,eACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,eAAd,eACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,sBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,yBAAd,yBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,eAAd,eACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,iBAAd,oCACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,cAAd,cACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,yBAAd,yBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,gBAAd,gBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,cAAd,cACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,gBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,aAAd,aACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,8BACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,mBAAd,mBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,gBAAd,gBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,iBAAd,gDACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,QAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,aACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,cAAd,cACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,2BAAd,2BACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,kCACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,aAAd,aACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,eAAd,eACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,wBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,6BACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,cAAd,cACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,gCACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,QAAd,QACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,uBAAd,uBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,gBAAd,gBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,oBAAd,4BACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,wBAAd,wBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,kBAAd,kBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,iBAAd,iBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,wCAAd,wCACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,cAAd,cACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,WACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,aAAd,aACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,WAAd,YACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,4BAAd,4BACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,wBAAd,yBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,6BAAd,6BACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,kBAAd,kBACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,SAAd,SACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,cAAd,cACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,UAAd,UACAQ,EAAAC,EAAAC,cAAA,UAAQV,MAAM,YAAd,aAEJQ,EAAAC,EAAAC,cAAA,SACIS,KAAK,OACLG,YAAY,eACZC,IAAI,WACJX,UAAU,QACVQ,KAAK,WACLsE,SAAU5E,KAAKuH,eAEnB7H,EAAAC,EAAAC,cAAA,SACIS,KAAK,WACLG,YAAY,eACZV,UAAU,QACVW,IAAI,WACJH,KAAK,WACLsE,SAAU5E,KAAKuH,eAGnB7H,EAAAC,EAAAC,cAAA,SACIS,KAAK,WACLG,YAAY,uBACZV,UAAU,QACVW,IAAI,mBACJH,KAAK,mBACLsE,SAAU5E,KAAKuH,eAGnB7H,EAAAC,EAAAC,cAAA,SACIS,KAAK,OACLG,YAAY,aACZV,UAAU,QACVW,IAAI,QACJH,KAAK,QACLsE,SAAU5E,KAAKuH,eAGnB7H,EAAAC,EAAAC,cAAA,SACIS,KAAK,OACLG,YAAY,qBACZF,KAAK,gBACLG,IAAI,gBACJX,UAAU,UAGdJ,EAAAC,EAAAC,cAAA,UAAQS,KAAK,SAASP,UAAU,iBAAhC,aAIRJ,EAAAC,EAAAC,cAACgI,EAAD,cAnXOhH,8BCkFRiH,6MA/EXvE,MAAQ,CACJ4B,SAAU,GACVI,SAAU,MAKdwC,UAAYC,IAAQC,IAAI,eAExBzC,aAAe,SAAC5G,GACZA,EAAMC,iBACN4G,MAAM,aAAc,CAChBC,QAAS,CAAEC,eAAgB,mBAAoBuC,cAAepJ,EAAKqJ,WAEnEC,YAAa,UACbxC,KAAM,cACNC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjBb,SAAUrG,EAAKyE,MAAM4B,SACrBI,SAAUzG,EAAKyE,MAAMgC,aAE1BU,KAVH,eAAAC,EAAAvC,OAAAwC,EAAA,EAAAxC,CAAAyC,EAAAxG,EAAAyG,KAUQ,SAAAC,EAAOC,GAAP,OAAAH,EAAAxG,EAAA4G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAxE,MAAA,cAAAwE,EAAAxE,KAAA,EAEEsE,EAASI,OAAOV,KAAK,SAAAW,GACV,UAATA,GAIA9H,EAAKC,MAAMkI,cAGXnI,EAAKC,MAAMiC,QAAQ5B,QAAQ,MAG3BiJ,QAAQC,IAAI,wBAbhB,wBAAA7B,EAAAW,SAAAd,MAVR,gBAAAe,GAAA,OAAAnB,EAAAoB,MAAArH,KAAAsH,YAAA,OA+BJC,aAAe,SAAA5I,GACXE,EAAKkF,SAALL,OAAA8D,EAAA,EAAA9D,CAAA,GACK/E,EAAM8I,OAAOnH,KAAO3B,EAAM8I,OAAOvI,iFAKtC,OACIQ,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,QAAMG,SAAUC,KAAKuF,cACjB7F,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAD,MACAD,EAAAC,EAAAC,cAAA,SACIS,KAAK,OACLP,UAAU,QACVW,IAAI,WACJH,KAAK,WACLE,YAAY,eACZoE,SAAU5E,KAAKuH,eAEnB7H,EAAAC,EAAAC,cAAA,SACIS,KAAK,WACLP,UAAU,QACVW,IAAI,WACJH,KAAK,WACLE,YAAY,eACZoE,SAAU5E,KAAKuH,eAEnB7H,EAAAC,EAAAC,cAAA,UAAQS,KAAK,SAASP,UAAU,iBAAhC,WAGRJ,EAAAC,EAAAC,cAACgI,EAAD,cA1EIhH,aC6EL0H,6MA7EXC,qBAAuB,SAAChH,EAAUsB,GAE9B,IADA,IAAI2F,EAAiB,GACZC,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC1B,GAAU,KAANA,EAGG,CACH,IAAIC,EAAUhJ,EAAAC,EAAAC,cAAA,UAAQuE,IAAKsE,GAAIA,GAE/B,OADAD,EAAeG,KAAKD,GAGhBhJ,EAAAC,EAAAC,cAAA,UAAQiD,GAAIA,EAAI8E,aAAcpG,EAAUqD,SAAU/F,EAAK+J,oBAClDJ,GART,IAAIE,EAAUhJ,EAAAC,EAAAC,cAAA,UAAQuE,IAAKsE,GAAIA,GAC/BD,EAAeG,KAAKD,OAchCE,mBAAqB,SAAAjK,GACjB,IAAMkE,EAAKlE,EAAMkG,cAAchC,GACzBtB,EAAW5C,EAAMkG,cAAc3F,MACrCL,EAAKC,MAAM+J,iBAAiBhG,EAAItB,MAGpCuH,gBAAkB,WACd,IAAIC,EAAQ,EACNzH,EAAezC,EAAKC,MAAMwC,aAFZE,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAGpB,QAAAC,EAAAC,EAAoBP,EAApBQ,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAkC,KAAzBU,EAAyBN,EAAA1C,MAC9B6J,GAAS7G,EAAQX,SAAWY,SAASD,EAAQyC,QAJ7B,MAAAvC,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAK,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAZ,EAAA,MAAAC,GAMpB,OAAOqH,2EAGF,IAAArG,EAAA1C,KACL,OAAIA,KAAKlB,MAAMwC,aAAa8C,OAAS,EAE7B1E,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBAEVE,KAAKlB,MAAMwC,aAAa2C,IAAI,SAAA/B,GAAO,OAChCxC,EAAAC,EAAAC,cAAA,OAAKuE,IAAKjC,EAAQ4B,YACdpE,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAMC,GAAI,CACNnD,SAAU,uBAAwBmC,MAAO,CAAEpB,UAASqC,MAAOrC,EAAQ4B,cAEnEpE,EAAAC,EAAAC,cAAA,OAAK4E,IAAKtC,EAAQuC,OAAQC,IAAKxC,EAAQqC,MAAOzE,UAAU,mBAE5DJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,mBAAWsC,EAAQyC,MAAnB,MAEJjF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,wBACC8C,EAAK6F,qBAAqBrG,EAAQX,SAAUW,EAAQ4B,iBAKrEpE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAAf,aAAkCE,KAAK8I,kBAAvC,MAGJpJ,EAAAC,EAAAC,cAACgI,EAAD,OAKJlI,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBACXJ,EAAAC,EAAAC,cAAA,MAAIoJ,MAAO,CAAEC,OAAQ,SAArB,yBAEJvJ,EAAAC,EAAAC,cAACgI,EAAD,cAxEDhH,aCkCJsI,6MAlCX3D,aAAe,SAAA5G,GACXA,EAAMC,0FAGN,OACIc,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaC,SAAUC,KAAKuF,cACvC7F,EAAAC,EAAAC,cAAA,QAAMiD,GAAG,mBACLnD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,QAAQU,YAAY,mBACrCd,EAAAC,EAAAC,cAAA,SAAOE,UAAU,QAAQU,YAAY,mBAEzCd,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,QAAQU,YAAY,cACrCd,EAAAC,EAAAC,cAAA,SAAOE,UAAU,QAAQU,YAAY,gBAEzCd,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YACIE,UAAU,QACVU,YAAY,kBACZ2I,KAAK,kBACLC,KAAK,KACLC,KAAK,QAGb3J,EAAAC,EAAAC,cAAA,UAAQS,KAAK,UAAb,UAGRX,EAAAC,EAAAC,cAACgI,EAAD,cA7BQhH,aCyFT0I,6MAjFXC,QAAU,IAoBVC,eAAiB,WAWb,OAVkB3K,EAAKC,MAAM6D,SAAS8G,OAClC,SAAAvH,GAAO,OAA2B,IAAvBA,EAAQwH,aAEEzF,IAAI,SAAA/B,GAAO,OAChCxC,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAMC,GAAI,CAAEnD,SAAU,uBAAwBmC,MAAO,CAAEpB,UAASqC,MAAOrC,EAAQ4B,aAC3EK,IAAKjC,EAAQ4B,WACbjB,GAAIX,EAAQ4B,YACZpE,EAAAC,EAAAC,cAAA,OAAK4E,IAAKtC,EAAQuC,OAAQC,IAAKxC,EAAQqC,MAAOzE,UAAU,eAMpE6J,gBAAkB,WACd,IAAMvF,EAASvF,EAAKG,KAAK4K,YAAYC,WAAWzF,OAC5CvF,EAAK0K,QAAUnF,EAAS,EAAGvF,EAAK0K,UAC/B1K,EAAK0K,QAAU,EACpB,IAAK,IAAIO,EAAQ,EAAGA,EAAQ1F,EAAQ0F,IAChCjL,EAAKG,KAAK4K,YAAYC,WAAWC,GAAOC,WAAWjK,UAAY,OAEnEjB,EAAKG,KAAK4K,YAAYC,WAAWhL,EAAK0K,SAASQ,WAAWjK,UAAY,UAG1EkK,gBAAkB,WACd,IAAM5F,EAASvF,EAAKG,KAAK4K,YAAYC,WAAWzF,OAC3B,IAAjBvF,EAAK0K,QAAe1K,EAAK0K,QAAUnF,EAAS,EAC3CvF,EAAK0K,UACV,IAAK,IAAIO,EAAQ,EAAGA,EAAQ1F,EAAQ0F,IAChCjL,EAAKG,KAAK4K,YAAYC,WAAWC,GAAOC,WAAWjK,UAAY,OAEnEjB,EAAKG,KAAK4K,YAAYC,WAAWhL,EAAK0K,SAASQ,WAAWjK,UAAY,2FAhDjEE,KAAKlB,MAAMmL,SACZjK,KAAKhB,KAAK4K,YAAYC,WAAWzF,OAAS,IAC1CpE,KAAKhB,KAAK4K,YAAYC,WAAW,GAAGA,WAAW,GAAG/J,UAAY,qDAMlE,IAAKE,KAAKlB,MAAMmL,QAAS,CAEzB,IADA,IAAM7F,EAASpE,KAAKhB,KAAK4K,YAAYC,WAAWzF,OACvC0F,EAAQ,EAAGA,EAAQ1F,EAAQ0F,IAChC9J,KAAKhB,KAAK4K,YAAYC,WAAWC,GAAOC,WAAWjK,UAAY,OAEnEE,KAAKhB,KAAK4K,YAAYC,WAAW7J,KAAKuJ,SAASQ,WAAWjK,UAAY,yCAsCjE,IAAA4C,EAAA1C,KACL,OAAIA,KAAKlB,MAAMmL,QACJvK,EAAAC,EAAAC,cAAA,yBAGHF,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACXJ,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIH,UAAU,aACVI,KAAMgK,IACN9J,QAAS,kBAAMsC,EAAKsH,qBAExBtK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBAAyBW,IAAI,eACvCT,KAAKwJ,kBAEV9J,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIH,UAAU,aACVI,KAAMiK,IACN/J,QAAS,kBAAMsC,EAAKiH,8BAzEtB/I,8FCiGXwJ,6MApGX9G,MAAQ,CACJ+G,iBAAkB,GAClB9G,aAAc,GACdC,SAAS,KA4BbC,gBAAkB,WACd,IAAIF,EAAYG,OAAAC,EAAA,EAAAD,CAAA,GAAQ7E,EAAKyE,MAAMC,cACnC1E,EAAKC,MAAM6D,SAASkB,QAAQ,SAAA3B,GACxBqB,EAAarB,EAAQ4B,YAAc,IAEvCjF,EAAKkF,SAAS,CAAER,oBAIpBS,qBAAuB,SAACnB,EAAItB,GACxB,IAAIgC,EAAYG,OAAAC,EAAA,EAAAD,CAAA,GAAQ7E,EAAKyE,MAAMC,cACnCA,EAAaV,GAAMV,SAASZ,GAC5B1C,EAAKkF,SAAS,CAAER,oBAGpB+G,oBAAsB,SAAAC,GAClB,IAAIF,EAAgB3G,OAAA8G,EAAA,EAAA9G,CAAO7E,EAAKyE,MAAM+G,kBACtCA,EAAmBxL,EAAKC,MAAM6D,SAAS8G,OACnC,SAAAvH,GAAO,OAAIA,EAAQuI,WAAaF,IAEpC1L,EAAKC,MAAM4L,iBAAiBH,GAC5B1L,EAAKkF,SAAS,CAAEsG,yGA7CA,IAAA3H,EAAA1C,KACZqK,EAAgB3G,OAAA8G,EAAA,EAAA9G,CAAO1D,KAAKsD,MAAM+G,kBACtCA,EAAmBrK,KAAKlB,MAAM6D,SAAS8G,OACnC,SAAAvH,GAAO,OAAIA,EAAQuI,WAAa/H,EAAK5D,MAAMyL,mBAE/CvK,KAAK+D,SAAS,CAAEsG,sBACW,IAAvBrK,KAAKsD,MAAME,UACXxD,KAAKyD,kBACLzD,KAAK+D,SAAS,CAAEP,SAAS,oDAY7B,MANc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACpBS,IAAI,SAAAC,GAAG,OACzBxE,EAAAC,EAAAC,cAAA,UAAQV,MAAOgF,EAAKC,IAAKD,GACpBA,sCA+BJ,IAAAyG,EAAA3K,KACL,OACIN,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oCACXJ,EAAAC,EAAAC,cAAA,UACIE,UAAU,gBACVM,QAAS,kBAAMuK,EAAKL,oBAAoB,WAF5C,SAIA5K,EAAAC,EAAAC,cAAA,UACIE,UAAU,oBACVM,QAAS,kBAAMuK,EAAKL,oBAAoB,WAF5C,UAKJ5K,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBACVE,KAAKsD,MAAM+G,iBAAiBpG,IAAI,SAAA/B,GAAO,OACpCxC,EAAAC,EAAAC,cAAA,OAAKuE,IAAKjC,EAAQ4B,YACdpE,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAMC,GAAI,CAAEnD,SAAU,uBAAwBmC,MAAO,CAAEpB,UAASqC,MAAOrC,EAAQ0I,aAA5BC,OAC/CnL,EAAAC,EAAAC,cAAA,OAAK4E,IAAKtC,EAAQuC,OAAQC,IAAKxC,EAAQqC,MAAOzE,UAAU,mBAE5DJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,mBAAWsC,EAAQyC,MAAnB,MAEJjF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,UAAQgF,SAAU,SAAAjG,GAAWgM,EAAK3G,qBAAqB9B,EAAQ4B,WAAYnF,EAAMkG,cAAc3F,SAAYyL,EAAK7F,yBAEpHpF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,qBAAqBM,QAAS,kBAAMuK,EAAK7L,MAAMiG,YAAY7C,EAASyI,EAAKrH,MAAMC,aAAarB,EAAQ4B,eAAtH,cAEApE,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACQH,UAAU,mBACVI,KAAMkD,IACNhD,QAAS,kBAAMuK,EAAK7L,MAAMiG,YAAY7C,EAASyI,EAAKrH,MAAMC,aAAarB,EAAQ4B,uBAO3GpE,EAAAC,EAAAC,cAACgI,EAAD,cA/FOhH,aCuFRkK,6MAtFXxH,MAAQ,CAAEC,aAAc,EAAGC,SAAS,KAGpCtB,QAAUrD,EAAKC,MAAMoC,SAASoC,MAAMpB,UAcpCuB,gBAAkB,WACEC,OAAAC,EAAA,EAAAD,CAAA,GAAQ7E,EAAKyE,MAAMC,cAEnC1E,EAAKkF,SAAS,CAAER,aADD,OAOnBS,qBAAuB,SAACzC,GACpB,IAAIgC,EAAYG,OAAAC,EAAA,EAAAD,CAAA,GAAQ7E,EAAKyE,MAAMC,cACnCA,EAAepB,SAASZ,GACxB1C,EAAKkF,SAAS,CAAER,sGApBXvD,KAAKsD,MAAME,SAAWxD,KAAKkC,UAC5BlC,KAAKyD,kBACLzD,KAAK+D,SAAS,CAAEP,SAAS,oDA4B7B,MAFc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACpBS,IAAI,SAAAC,GAAG,OAAKxE,EAAAC,EAAAC,cAAA,UAAQV,MAAOgF,EAAKC,IAAKD,GAAMA,sCAI5D,IAAAxB,EAAA1C,KACCkC,EAAUlC,KAAKlB,MAAMoC,SAASoC,MAAMpB,QAK1C,OAAIlC,KAAKsD,MAAME,QAIP9D,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAEXJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKsC,EAAQqC,QAGjB7E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAK4E,IAAKtC,EAAQuC,OAAQC,IAAKxC,EAAQqC,SAG3C7E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,mBAAWsC,EAAQyC,MAAnB,MACNjF,EAAAC,EAAAC,cAAA,UAAQgF,SAAU,SAAAjG,GAAW+D,EAAKsB,qBAAqBrF,EAAMkG,cAAc3F,SACtEc,KAAK8E,wBAEVpF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,qBACdM,QAAS,kBAAMsC,EAAK5D,MAAMiG,YAAY7C,EAASQ,EAAKY,MAAMC,gBAD9D,cAEI7D,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAiBH,UAAU,mBAAmBI,KAAMkD,IAChDhD,QAAS,kBAAMsC,EAAK5D,MAAMiG,YAAY7C,EAASQ,EAAKY,MAAMC,qBAS3E7D,EAAAC,EAAAC,cAAA,gCAnFUgB,aC0CdmK,6MAxCXC,iBAAmB,WAAM,IAAAC,EACapM,EAAKC,MAA/B6D,EADasI,EACbtI,SAAUuI,EADGD,EACHC,YACdF,EAAmBrI,EAAS8G,OAAO,SAAAvH,GAAO,OAC1CA,EAAQqC,MAAM4G,cAAcC,SAASF,KAEzC,OAAIF,EAAiB5G,OAAS,EAEtB1E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBAAwBW,IAAI,iBACtCuK,EAAiB/G,IAAI,SAAA/B,GAAO,OACzBxC,EAAAC,EAAAC,cAAA,OAAKuE,IAAKjC,EAAQ4B,YACdpE,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAMC,GAAI,CAAEnD,SAAU,uBAAwBmC,MAAO,CAAEpB,UAASqC,MAAOrC,EAAQ4B,cAC3EpE,EAAAC,EAAAC,cAAA,OAAK4E,IAAKtC,EAAQuC,OAAQC,IAAKxC,EAAQqC,MAAOzE,UAAU,mBAE5DJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,mBAAWsC,EAAQyC,MAAnB,MAEJjF,EAAAC,EAAAC,cAAA,UACIE,UAAU,qBACVM,QAAS,kBAAMvB,EAAKC,MAAMiG,YAAY7C,KAF1C,cAGIxC,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIH,UAAU,mBACVI,KAAMkD,IACNhD,QAAS,kBAAMvB,EAAKC,MAAMiG,YAAY7C,YAQ3DxC,EAAAC,EAAAC,cAAA,wGAKX,OAAOF,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KAAiBG,KAAKgL,2BArCTpK,iBC4YbyK,6MA9XX/H,MAAQ,CACJM,iBAAkB,GAClBtC,aAAc,GACdgK,YAAa,GACb3I,SAAU,GACVC,mBAAmB,EACnBsI,aAAa,EACbK,QAAQ,EACRtB,SAAS,EACTM,iBAAkB,WAGtBiB,SAAU,IAkDV1K,SAAWjC,EAAKC,MAAMiC,QAAQ5B,UAE9BsM,YAAc,SAAAxK,GACNyK,OAAOC,YAAc,KACrB9M,EAAKiC,SAASG,GACdpC,EAAKkF,SAAS,CAAEwH,QAAQ,KACrB1M,EAAKiC,SAASG,MAIzB2K,kBAAoB,WAChB,IAAMC,EAAeC,SAASC,eAAe,YACV,SAA/BF,EAAa7C,MAAMgD,QACnBH,EAAa7C,MAAMgD,QAAU,OAC5BH,EAAa7C,MAAMgD,QAAU,UAEtClE,UAAYC,IAAQC,IAAI,eAExBiE,gBAAkB,SAAC/J,EAASX,GAExBW,EAAQX,SAAWA,EACnBA,EAAWY,SAASZ,GACpB,IAAMD,EAAYoC,OAAA8G,EAAA,EAAA9G,CAAO7E,EAAKyE,MAAMhC,cAC9B4K,EAAe5K,EAAa6K,KAAK,SAAAC,GAAI,OAAIA,EAAKtI,aAAe5B,EAAQ4B,aAC3E,GAAIjF,EAAKyE,MAAMV,kBAAkB,CAE7B,GAAIsJ,EAAa,CAEb,GADiBA,EAAa3K,SAAWA,EACrB,GAEhB,YADA0F,MAAM,6CAGNiF,EAAa3K,UAAYA,OAG7BD,EAAaqH,KAAKzG,GAEtBsD,MAAM,iBAAkB,CACpBC,QAAS,CACLC,eAAgB,mBAChBuC,cAAepJ,EAAKiJ,UACpBuE,OAAU,oBAEdlE,YAAa,cACbxC,KAAM,cACNC,OAAQ,OACRC,KAAMC,KAAKC,UAAU7D,KACtB8D,KAAK,SAAAM,GACJoF,OAAOxK,SAASoL,gBAIZJ,GACAA,EAAa3K,UAAYA,EACzBuF,aAAaC,QAAQ,OAAQjB,KAAKC,UAAUzE,IAC5CzC,EAAKkF,SAAS,CAACzC,aAAawE,KAAKyG,MAAMzF,aAAa0F,QAAQ,aAE5DlL,EAAaqH,KAAKzG,GAClB4E,aAAaC,QAAQ,OAAQjB,KAAKC,UAAUzE,IAC5CzC,EAAKkF,SAAS,CAACzC,aAAawE,KAAKyG,MAAMzF,aAAa0F,QAAQ,eAS5EC,qBAAuB,SAAC5J,EAAItB,GACxBA,EAAWY,SAASZ,GACpB,IACI2K,EADYxI,OAAA8G,EAAA,EAAA9G,CAAO7E,EAAKyE,MAAMhC,cACF6K,KAAK,SAAAC,GAAI,OAAIA,EAAKtI,aAAe3B,SAASU,KACtE6J,EAAa,EAEjB,GAAI7N,EAAKyE,MAAMV,kBAAkB,CAC7B,QAAQ,GACJ,KAAMrB,EAAW2K,EAAa3K,SAC1BmL,EAAcnL,EAAW2K,EAAa3K,SACtC,MACJ,KAAM2K,EAAa3K,SAAWA,EAC1BmL,IAAgBR,EAAa3K,SAAWA,GAMhD2K,EAAa3K,SAAWmL,EACxBlH,MAAM,iBAAkB,CACpBC,QAAS,CACLC,eAAgB,mBAChBuC,cAAepJ,EAAKiJ,UACpBuE,OAAU,oBAEdlE,YAAa,cACbxC,KAAM,cACNC,OAAQ,OACRC,KAAMC,KAAKC,UAAUmG,KACtBlG,KAAK,SAAAM,GACJoF,OAAOxK,SAASoL,gBAMpBlE,QAAQC,IAAI,+BAUpBsE,kBAAoB,SAAAzB,GAChBrM,EAAKkF,SAAS,CAAEmH,mBAGpB0B,qBAAuB,SAAArC,GACnB1L,EAAKkF,SAAS,CAAEwG,wBAEpBsC,mBAAqB,WACjB,IAAMjJ,EAAmB/E,EAAKyE,MAAMX,SAAS8G,OACzC,SAAAvH,GAAO,OAAyB,IAArBA,EAAQ4K,WAEvB,GAA6C,UAAzCjO,EAAKC,MAAMiC,QAAQG,SAASC,SAC5B,OACIzB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAACmN,EAAD,CACI9C,QAASpL,EAAKyE,MAAM2G,QACpBtH,SAAU9D,EAAKyE,MAAMX,SACrBqK,eAAgBnO,EAAKoO,qBAEzBvN,EAAAC,EAAAC,cAACkN,EAAD,CACIlJ,iBAAkBA,EAClBmB,YAAalG,EAAKoN,kBAEtBvM,EAAAC,EAAAC,cAACgI,EAAD,UAMhBtF,gBAAkB,WACTzD,EAAKyE,MAAMiI,OAIZ1M,EAAKkF,SAAS,CAAEwH,QAAQ,KAHxB1M,EAAKkF,SAAS,CAAEwH,QAAQ,IACxB1M,EAAKC,MAAMiC,QAAQ5B,QAAQ,aAMnCT,mBAAqB,SAAAC,GACjBA,EAAMC,iBACNC,EAAK8N,kBAAkB9N,EAAKG,KAAKC,YAAYC,OAC7CL,EAAKyD,kBACLzD,EAAKC,MAAMiC,QAAQ5B,QAAQ,mBAG/B+N,gBAAkB,WAEVrO,EAAKkF,SAAS,CAAEnB,mBAAkB,OAI1CuK,iBAAmB,WCrPnB3H,MAAM,cAAe,CACjBC,QAAS,CAAEC,eAAgB,oBAC3BC,KAAM,cACNC,OAAQ,QDoPJ/G,EAAKkF,SAAS,CAAGnB,mBAAkB,IACnC8I,OAAOxK,SAASoL,YAKxBc,0BAA4B,WACxB,OAAItG,aAAa0F,QAAQ,UACd9M,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAAcM,QAAW,kBAAMvB,EAAKsO,qBAAlD,UAGPzN,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAAcM,QAAS,kBAAMvB,EAAK4M,YAAY,iBAA5D,WACA/L,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAAcM,QAAS,kBAAMvB,EAAK4M,YAAY,oBAA5D,gGApOQ,IAAA/I,EAAA1C,KAiBhB,GAhBAoI,QAAQC,IAAI,qBACZ7C,MAAM,kBAAmB,CACrBC,QAAS,CAAEC,eAAgB,oBAC3ByC,YAAa,UACbxC,KAAM,cACNC,OAAQ,QACTI,KAAM,SAACM,GACNA,EAASI,OAAOV,KAAK,SAACW,GAClB,GAAIA,EAAK,CACL,IAAOhE,EAAYmD,KAAKyG,MAAM5F,EAAK,IAAI1C,IAAI,SAAA/B,GAAO,OAAIA,EAAQmL,SAC9D3K,EAAKqB,SAAS,CAAEpB,WAAUsH,SAAS,EAAOrH,kBAAkB+D,EAAK,UAMzE3G,KAAKsD,MAAMV,kBACX4C,MAAM,iBAAkB,CACpBC,QAAS,CAAEC,eAAgB,oBAC3ByC,YAAa,UACbxC,KAAM,cACNC,OAAQ,QACTI,KAAM,SAACM,GACkB,MAApBA,EAASgH,QACThH,EAASI,OAAOV,KAAK,SAAA1E,GACjBA,EAAewE,KAAKyG,MAAMjL,GAAc2C,IAAI,SAAA/B,GAAO,OAAIA,EAAQmL,SAC/D3K,EAAKqB,SAAS,CAAEzC,eAAc2I,SAAQ,YAMjD,CACD,IAAM3I,EAAewE,KAAKyG,MAAMzF,aAAa0F,QAAQ,SAClDlL,GACCtB,KAAK+D,SAAS,CAACzC,eAAc2I,SAAQ,IAG7CjK,KAAKwL,SAAU,iDAKfxL,KAAK+D,SAAS,CAACkG,SAAQ,EAAMrH,mBAAkB,IAC/C5C,KAAKwL,SAAU,mCA4LV,IAAAb,EAAA3K,KACGe,EAAYf,KAAKlB,MAAjBiC,QADHwM,EAE6DvN,KAAKsD,MAA/DX,EAFH4K,EAEG5K,SAAUrB,EAFbiM,EAEajM,aAAc4J,EAF3BqC,EAE2BrC,YAAaX,EAFxCgD,EAEwChD,iBAC7C,OAAKvK,KAAKsD,MAAMiI,OAgFR7L,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAACuD,EAAD,CACIpE,oBAAqBiB,KAAK2M,kBAC1B5L,QAASA,EACT4B,SAAUA,EACVrB,aAAcA,EACdiB,YAAavC,KAAKsC,gBAClBS,YAAa/C,KAAKyL,YAClB7I,kBAAmB5C,KAAKsD,MAAMV,kBAC9BH,aAAczC,KAAKmN,mBAEvBzN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,mBAAmBC,SAAUC,KAAKtB,oBAC9CgB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAiBH,UAAU,mBAAmBI,KAAMC,IAAUC,QAASJ,KAAKR,oBAC5EE,EAAAC,EAAAC,cAAA,SACIE,UAAU,oBACVO,KAAK,SACLC,KAAK,SACLC,OAAQP,KAAKZ,WACboB,YAAY,kBACZC,IAAI,cACJC,WAAS,KAIjBhB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,gBAAgBW,IAAI,OAC9Bf,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eAAeM,QAAS,kBAAMuK,EAAKc,YAAY,oBAA7D,YAECzL,KAAKoN,4BACN1N,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBAAiBM,QAAS,kBAAMuK,EAAKc,YAAY,sBAA/D,gBAIR/L,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,KACI9N,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CACIC,KAAK,eACLC,UAAW,SAAA5O,GAAK,OACZY,EAAAC,EAAAC,cAAC+N,EAADjK,OAAAkK,OAAA,CACIjL,SAAUA,EACVuI,YAAaA,EACbnG,YAAa4F,EAAKsB,iBACdnN,SAvHxBY,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaW,IAAI,QAC5Bf,EAAAC,EAAAC,cAACuD,EAAD,CACIpE,oBAAqBiB,KAAK2M,kBAC1B5L,QAASA,EACT4B,SAAUA,EACVrB,aAAcA,EACdiB,YAAavC,KAAKsC,gBAClBS,YAAa/C,KAAKyL,YAClB7I,kBAAmB5C,KAAKsD,MAAMV,kBAC9BH,aAAczC,KAAKmN,mBAEtBnN,KAAK6M,qBACNnN,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,KACI9N,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAOC,KAAK,iBAAiBC,UAAW,SAAA5O,GAAK,OACzCY,EAAAC,EAAAC,cAACiO,EAADnK,OAAAkK,OAAA,GAAc9O,EAAd,CAAsBkI,YAAa2D,EAAKuC,sBAE5CxN,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CACIC,KAAK,cACLC,UAAW,SAAA5O,GAAK,OACZY,EAAAC,EAAAC,cAACkO,EAADpK,OAAAkK,OAAA,GAAW9O,EAAX,CACI8D,kBAAmB+H,EAAKrH,MAAMV,kBAC9BoE,YAAa2D,EAAKuC,sBAG9BxN,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CACIC,KAAK,aACLC,UAAW,SAAA5O,GAAK,OACZY,EAAAC,EAAAC,cAACwB,EAADsC,OAAAkK,OAAA,CACI/E,iBAAkB8B,EAAK8B,qBACvBnL,aAAcA,GACVxC,OAIhBY,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CACIC,KAAK,eACLC,UAAW,SAAA5O,GAAK,OACZY,EAAAC,EAAAC,cAAC+N,EAADjK,OAAAkK,OAAA,CACIjL,SAAUA,EACVuI,YAAaA,EACbnG,YAAa4F,EAAKsB,iBACdnN,OAIhBY,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CACIC,KAAK,iBACLC,UAAW,SAAA5O,GAAK,OACZY,EAAAC,EAAAC,cAACmO,EAADrK,OAAAkK,OAAA,CACIjL,SAAUA,EACVoC,YAAa4F,EAAKsB,gBAClB1B,iBAAkBA,EAClBG,iBAAkBC,EAAKiC,sBACnB9N,OAIhBY,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CACIC,KAAK,mBACLC,UAAW,SAAA5O,GAAK,OAAIY,EAAAC,EAAAC,cAACoO,EAAclP,MAEvCY,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CACIC,KAAK,uBACLC,UAAW,SAAA5O,GAAK,OACZY,EAAAC,EAAAC,cAACqO,EAADvK,OAAAkK,OAAA,GACQ9O,EADR,CAEIiG,YAAa4F,EAAKsB,sBAI9BvM,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAUU,KAAK,UAAU5J,GAAG,gBApUpC1D,aEFLuN,2LATX,OACEzO,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,KACE9N,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAW,SAAA5O,GAAK,OAAIY,EAAAC,EAAAC,cAACwO,EAAUtP,MACnDY,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAUU,KAAK,IAAI5J,GAAG,kBALZ1D,cCOEyN,QACW,cAA7B3C,OAAOxK,SAASoN,UAEe,UAA7B5C,OAAOxK,SAASoN,UAEhB5C,OAAOxK,SAASoN,SAASC,MACvB,gFCVNC,IAASC,OACP/O,EAAAC,EAAAC,cAACyE,EAAA,EAAD,KACE3E,EAAAC,EAAAC,cAAC8O,EAAD,OAEF5C,SAASC,eAAe,SAI1B4C,IAAQC,KAAK,CACXC,OAAQ,CACNC,SAAU,CAAC,SAAU,WAAY,iBD+G/B,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjJ,KAAK,SAAAkJ,GACjCA,EAAaC","file":"static/js/main.e3ace14e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Search extends Component {\n    handleSearchSubmit = event => {\n        event.preventDefault();\n        this.props.onSearchInputSubmit(this.refs.searchinput.value);\n        this.props.replace(\"/home/search\");\n    };\n\n    handleBlur = () => {\n        // * Refactor * This code to be replaced by CSS by implementing new styles to a new class and simply changing the className in JS.\n        this.refs.searchinput.setAttribute(\"style\", \"display:none\");\n        this.props.cartRef.setAttribute(\"style\", \"display:inline-block\");\n        this.refs.searchexit.setAttribute(\"style\", \"display:none\");\n        // this.props.navRef.setAttribute(\n        //     \"style\",\n        //     \"grid-template-columns: 11% 11% 11% 11% 11% 11%  34%\"\n        // );\n    };\n\n    handleSearchClick = () => {\n        // * Refactor* This code to be replaced by CSS by implementing new styles to a new class and simply changing the className in JS.\n        this.refs.searchinput.setAttribute(\"style\", \"display:inline-block\");\n        this.refs.searchinput.focus();\n        this.refs.searchexit.setAttribute(\"style\", \"display:inline-block\");\n        this.props.cartRef.setAttribute(\"style\", \"display:none\");\n        // this.props.navRef.setAttribute(\n        //     \"style\",\n        //     \"grid-template-columns: 11% 11% 11% 11% 11% 11% 34%\"\n        // );\n    };\n\n    // We will need to render a search form so we can use the onSubmit method\n    // to search the datebase then get the results and redirect to a new component and page\n    // called SearchResults\n    // We will implement that by adding a route in the application and utilize the replace or push\n    // methods in the history of the props.\n    render() {\n        return (\n            <React.Fragment>\n                <form className=\"search-form\" onSubmit={this.handleSearchSubmit}>\n                    <FontAwesomeIcon\n                        className=\"search-icon\"\n                        icon={faSearch}\n                        onClick={this.handleSearchClick}\n                    />\n                    <input\n                        className=\"search-field\"\n                        type=\"search\"\n                        name=\"search\"\n                        onBlur={this.handleBlur}\n                        placeholder=\"     Search ...\"\n                        ref=\"searchinput\"\n                        autoFocus\n                    />\n                    <div ref=\"searchexit\" className=\"search-exit-container\">\n                        <FontAwesomeIcon\n                            className=\"search-exit\"\n                            icon={faTimes}\n                            onClick={this.handleBlur}\n                        />\n                    </div>\n                </form>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport Search from \"../top-section/search\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart, faBars } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Nav extends Component {\n    redirect = this.props.history.replace;\n    handleLinkClick = url => {\n        if (this.props.history.location.pathname !== url) this.redirect(url);\n    };\n\n    // I should be able to replace this in CSS by using the hover // property because phones treat hover as click\n\n    handleSearchClick = () => {\n        this.refs.cart.setAttribute(\"style\", \"display:none\");\n        // this.refs.nav.setAttribute(\n        //     \"style\",\n        //     \"grid-template-columns: 11% 11% 11% 11% 11% 11% 13%\"\n        // );\n    };\n\n    cartQuantity = () => {\n        const cartProducts = this.props.cartProducts;\n        let quantity = 0;\n        for (let product of cartProducts) {\n            quantity += parseInt(product.quantity);\n        }\n        return quantity;\n    };\n\n    handleMenuClick = () => {\n        this.props.onMenuClick();\n    };\n\n    handleLogout = () => {\n        this.props.onUserLogout();\n        this.props.history.replace(\"/products\")\n    };\n\n\n\n    render() {\n        const { handleLinkClick, handleMenuClick } = this;\n        const { products } = this.props;\n        if (!this.props.userAuthenticated){\n            return (\n                <div id=\"nav-main\">\n                    <ul className=\"nav-main\" ref=\"nav\">\n                        <li className=\"menu-bars\" onClick={() => handleMenuClick()}>\n                            <FontAwesomeIcon icon={faBars} />\n                        </li>\n                        <li className=\"first-li\" />\n                        <li className=\"home-link\"\n                            onClick={() => this.props.onLinkClick(\"/home\")}>Amaze</li>\n    \n                        <li className=\"products-link\"\n                            onClick={() => handleLinkClick(\"/home/products\")}>Products</li>\n    \n                            <li className=\"sign-in-link\"\n                            onClick={() => this.handleLinkClick(\"/home/login\")}> Sign In</li>\n                        <li className=\"sign-up-link\"\n                            onClick={() => this.handleLinkClick(\"/home/register\")}>Sign Up</li>\n    \n                        <li className=\"contact-us-link\"\n                            onClick={() => handleLinkClick(\"/home/contact-us\")}>Contact Us</li>\n    \n                        <Search\n                            onSearchInputSubmit={this.props.onSearchInputSubmit}\n                            onSearchClick={this.handleSearchClick}\n                            cartRef={this.refs.cart}\n                            navRef={this.refs.nav}\n                            products={products}\n                            replace={this.props.history.replace}\n                        />\n                        <div ref=\"cart\" className=\"cart-main\">\n                            <p className=\"cart-count\"\n                                onClick={() => this.props.onLinkClick(\"/home/cart\")}>Basket({this.cartQuantity()})\n                            </p>\n    \n                            <FontAwesomeIcon\n                                icon={faShoppingCart}\n                                className=\"cart-icon\"\n                                onClick={() => this.props.onLinkClick(\"/home/cart\")}\n                            />\n                        </div>\n                        <li className=\"last-li\" />\n                    </ul>\n                </div>\n            );\n        }else{\n            return (\n                <div id=\"nav-main\">\n                    <ul className=\"nav-main\" ref=\"nav\">\n                        <li className=\"menu-bars\" onClick={() => handleMenuClick()}>\n                            <FontAwesomeIcon icon={faBars} />\n                        </li>\n                        <li className=\"first-li\" />\n                        <li className=\"home-link\"\n                            onClick={() => this.props.onLinkClick(\"/home\")}>Amaze</li>\n    \n                        <li className=\"products-link\"\n                            onClick={() => handleLinkClick(\"/home/products\")}>Products</li>\n    \n                        <li className=\"sign-in-link\" onClick={() => this.handleLogout()}>Logout</li>\n\n    \n                        <li className=\"contact-us-link\"\n                            onClick={() => handleLinkClick(\"/home/contact-us\")}>Contact Us</li>\n    \n                        <Search\n                            onSearchInputSubmit={this.props.onSearchInputSubmit}\n                            onSearchClick={this.handleSearchClick}\n                            cartRef={this.refs.cart}\n                            navRef={this.refs.nav}\n                            products={products}\n                            replace={this.props.history.replace}\n                        />\n                        <div ref=\"cart\" className=\"cart-main\">\n                            <p className=\"cart-count\"\n                                onClick={() => this.props.onLinkClick(\"/home/cart\")}>Basket({this.cartQuantity()})\n                            </p>\n    \n                            <FontAwesomeIcon\n                                icon={faShoppingCart}\n                                className=\"cart-icon\"\n                                onClick={() => this.props.onLinkClick(\"/home/cart\")}\n                            />\n                        </div>\n                        <li className=\"last-li\" />\n                    </ul>\n                </div>\n            );\n        }\n\n    }\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\n\n// All Images needs to be replaced with a loading icon incase images aren't loaded from the server yet\nclass Featured extends Component {\n    // selectValues is for the initial values of the select menus\n    // updated is for used to prevent the component from rerendering by changing it to true in componenetDidUpdate after\n    // it sets the state once.\n\n    state = {\n        selectValues: {},\n        updated: false\n    };\n\n    // Create 10 options for the product quantity\n    returnSelectElements() {\n        const index = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n        const options = index.map(num => (\n            <option value={num} key={num}>\n                {num}\n            </option>\n        ));\n        return options;\n    }\n\n    // We are using this to force the Component to update so we could get initial values for our select element.\n    // The reason we didn't need to do that in <Products/> is because it's being passed in a switch as a route and \n    // the default behavior for that is it will make the componenet remound and reupdate\n    componentDidMount() {\n        if (!this.state.updated && this.props.featuredProducts.length > 0) {\n            this.setSelectValues();\n            this.setState({ updated: true });\n        }\n    }\n\n\n    //call the setSelectValues then change the updated to true to prevent rerendering to prevent the\n    // MaximumDepthExceeded error.\n    componentDidUpdate() {\n        if (!this.state.updated && this.props.featuredProducts.length > 0) {\n            this.setSelectValues();\n            this.setState({ updated: true });\n        }\n    }\n\n    // assign initial values for select menu\n    setSelectValues = () => {\n        let selectValues = { ...this.state.selectValues };\n        this.props.featuredProducts.forEach(product => {\n            selectValues[product.product_id] = 1;\n        });\n        this.setState({ selectValues });\n    };\n\n    // Update the quantity of the current product in the state\n    handleQuantityChange = (id, quantity) => {\n        let selectValues = { ...this.state.selectValues };\n        selectValues[id] = parseInt(quantity);\n        this.setState({ selectValues });\n    };\n\n    render() {\n\n        return (\n            <div className=\"featured-products\">\n                {this.props.featuredProducts.map(product => (\n                    <div key={product.product_id}>\n                        <Link to={{ pathname: \"/home/productdetails\", state: { product, title: product.product_id } }}>\n                            <img src={product.imgUrl} alt={product.title} className=\"featured-show\" />\n                        </Link>\n                        <div className=\"price-add\">\n                            <span>\n                                <em>Price:{product.price}$</em>\n                            </span>\n                            <span>\n                                <select onChange={event => { this.handleQuantityChange(product.product_id, event.currentTarget.value) }}>\n                                    {this.returnSelectElements()}\n                                </select>\n                            </span>\n                            <button\n                                className=\"add-to-cart-button\"\n                                onClick={() => { this.props.onAddToCart(product, this.state.selectValues[product.product_id]) }}>Add to Cart\n                                <FontAwesomeIcon className=\"add-to-cart-icon\" icon={faShoppingCart}\n                                    onClick={() => this.props.onAddToCart(product, this.state.selectValues[product.product_id])} />\n                            </button>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default Featured;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Footer extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"footer\">\n                    <p>\n                        Copyright &#169; <em>Hossam Mohamed</em>. All rights reserved.\n                    </p>\n                    <span>\n                        <Link to=\"#\">Privacy Policy |</Link>\n                        <Link to=\"#\">Terms of Use |</Link>\n                        <Link to=\"#\">Contact us </Link>\n                    </span>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport Footer from \"../bottom-section/footer\";\nimport DjangoCSRFToken from \"django-react-csrftoken\";\n\nclass Register extends Component {\n    state = {\n        username: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        password: \"\"\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        fetch(\"/SignupAPI/\", {\n            headers: { \"Content-Type\": \"application/json\" },\n            mode: \"same-origin\",\n            method: \"POST\",\n            body: JSON.stringify({\n                username: this.state.username,\n                first_name: this.state.first_name,\n                last_name: this.state.last_name,\n                email: this.state.email,\n                password: this.state.password\n            })\n        }).then( async response => {\n            await response.json().then(data => {\n                if (data === \"allow\"){\n                    const refs = [\n                        this.refs.username,\n                        this.refs.password,\n                        this.refs.confirm_password,\n                        this.refs.email,\n                        this.refs.confirm_email,\n                        this.refs.first_name,\n                        this.refs.last_name\n                    ];\n                    refs.forEach(ref => (ref.value = \"\"));\n\n                    // store the id and password in the local storage\n                    localStorage.setItem(\"logged\", true)\n                    this.props.onUserLogin();\n                    alert(`Thank you for signing up ${this.state.first_name}`)\n                    // Redirect to the following URL\n                    this.props.history.replace(\"/\");\n                }else{\n                    alert(\"Username is already taken\")\n                }\n                \n            })\n\n        });\n    };\n\n\n\n\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"sign-up\">\n                    <form onSubmit={this.handleSubmit}>\n                        <DjangoCSRFToken />\n                        <div className=\"first-last-input\">\n                            <input\n                                type=\"text\"\n                                placeholder=\"   First name\"\n                                ref=\"first_name\"\n                                name=\"first_name\"\n                                onChange={this.handleChange}\n                            />\n                            <input\n                                type=\"text\"\n                                placeholder=\"    Last name\"\n                                ref=\"last_name\"\n                                name=\"last_name\"\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                        <select className=\"country-select\" defaultValue=\"United States\">\n                            <option value=\"Afghanistan\">Afghanistan</option>\n                            <option value=\"Albania\">Albania</option>\n                            <option value=\"Algeria\">Algeria</option>\n                            <option value=\"American Samoa\">American Samoa</option>\n                            <option value=\"Andorra\">Andorra</option>\n                            <option value=\"Angola\">Angola</option>\n                            <option value=\"Anguilla\">Anguilla</option>\n                            <option value=\"Antartica\">Antarctica</option>\n                            <option value=\"Antigua and Barbuda\">Antigua and Barbuda</option>\n                            <option value=\"Argentina\">Argentina</option>\n                            <option value=\"Armenia\">Armenia</option>\n                            <option value=\"Aruba\">Aruba</option>\n                            <option value=\"Australia\">Australia</option>\n                            <option value=\"Austria\">Austria</option>\n                            <option value=\"Azerbaijan\">Azerbaijan</option>\n                            <option value=\"Bahamas\">Bahamas</option>\n                            <option value=\"Bahrain\">Bahrain</option>\n                            <option value=\"Bangladesh\">Bangladesh</option>\n                            <option value=\"Barbados\">Barbados</option>\n                            <option value=\"Belarus\">Belarus</option>\n                            <option value=\"Belgium\">Belgium</option>\n                            <option value=\"Belize\">Belize</option>\n                            <option value=\"Benin\">Benin</option>\n                            <option value=\"Bermuda\">Bermuda</option>\n                            <option value=\"Bhutan\">Bhutan</option>\n                            <option value=\"Bolivia\">Bolivia</option>\n                            <option value=\"Bosnia and Herzegowina\">Bosnia and Herzegowina</option>\n                            <option value=\"Botswana\">Botswana</option>\n                            <option value=\"Bouvet Island\">Bouvet Island</option>\n                            <option value=\"Brazil\">Brazil</option>\n                            <option value=\"British Indian Ocean Territory\">British Indian Ocean Territory</option>\n                            <option value=\"Brunei Darussalam\">Brunei Darussalam</option>\n                            <option value=\"Bulgaria\">Bulgaria</option>\n                            <option value=\"Burkina Faso\">Burkina Faso</option>\n                            <option value=\"Burundi\">Burundi</option>\n                            <option value=\"Cambodia\">Cambodia</option>\n                            <option value=\"Cameroon\">Cameroon</option>\n                            <option value=\"Canada\">Canada</option>\n                            <option value=\"Cape Verde\">Cape Verde</option>\n                            <option value=\"Cayman Islands\">Cayman Islands</option>\n                            <option value=\"Central African Republic\">Central African Republic</option>\n                            <option value=\"Chad\">Chad</option>\n                            <option value=\"Chile\">Chile</option>\n                            <option value=\"China\">China</option>\n                            <option value=\"Christmas Island\">Christmas Island</option>\n                            <option value=\"Cocos Islands\">Cocos (Keeling) Islands</option>\n                            <option value=\"Colombia\">Colombia</option>\n                            <option value=\"Comoros\">Comoros</option>\n                            <option value=\"Congo\">Congo</option>\n                            <option value=\"Congo\">Congo, the Democratic Republic of the</option>\n                            <option value=\"Cook Islands\">Cook Islands</option>\n                            <option value=\"Costa Rica\">Costa Rica</option>\n                            <option value=\"Cota D'Ivoire\">Cote d'Ivoire</option>\n                            <option value=\"Croatia\">Croatia (Hrvatska)</option>\n                            <option value=\"Cuba\">Cuba</option>\n                            <option value=\"Cyprus\">Cyprus</option>\n                            <option value=\"Czech Republic\">Czech Republic</option>\n                            <option value=\"Denmark\">Denmark</option>\n                            <option value=\"Djibouti\">Djibouti</option>\n                            <option value=\"Dominica\">Dominica</option>\n                            <option value=\"Dominican Republic\">Dominican Republic</option>\n                            <option value=\"East Timor\">East Timor</option>\n                            <option value=\"Ecuador\">Ecuador</option>\n                            <option value=\"Egypt\">Egypt</option>\n                            <option value=\"El Salvador\">El Salvador</option>\n                            <option value=\"Equatorial Guinea\">Equatorial Guinea</option>\n                            <option value=\"Eritrea\">Eritrea</option>\n                            <option value=\"Estonia\">Estonia</option>\n                            <option value=\"Ethiopia\">Ethiopia</option>\n                            <option value=\"Falkland Islands\">Falkland Islands (Malvinas)</option>\n                            <option value=\"Faroe Islands\">Faroe Islands</option>\n                            <option value=\"Fiji\">Fiji</option>\n                            <option value=\"Finland\">Finland</option>\n                            <option value=\"France\">France</option>\n                            <option value=\"France Metropolitan\">France, Metropolitan</option>\n                            <option value=\"French Guiana\">French Guiana</option>\n                            <option value=\"French Polynesia\">French Polynesia</option>\n                            <option value=\"French Southern Territories\">French Southern Territories</option>\n                            <option value=\"Gabon\">Gabon</option>\n                            <option value=\"Gambia\">Gambia</option>\n                            <option value=\"Georgia\">Georgia</option>\n                            <option value=\"Germany\">Germany</option>\n                            <option value=\"Ghana\">Ghana</option>\n                            <option value=\"Gibraltar\">Gibraltar</option>\n                            <option value=\"Greece\">Greece</option>\n                            <option value=\"Greenland\">Greenland</option>\n                            <option value=\"Grenada\">Grenada</option>\n                            <option value=\"Guadeloupe\">Guadeloupe</option>\n                            <option value=\"Guam\">Guam</option>\n                            <option value=\"Guatemala\">Guatemala</option>\n                            <option value=\"Guinea\">Guinea</option>\n                            <option value=\"Guinea-Bissau\">Guinea-Bissau</option>\n                            <option value=\"Guyana\">Guyana</option>\n                            <option value=\"Haiti\">Haiti</option>\n                            <option value=\"Heard and McDonald Islands\">Heard and Mc Donald Islands</option>\n                            <option value=\"Holy See\">Holy See (Vatican City State)</option>\n                            <option value=\"Honduras\">Honduras</option>\n                            <option value=\"Hong Kong\">Hong Kong</option>\n                            <option value=\"Hungary\">Hungary</option>\n                            <option value=\"Iceland\">Iceland</option>\n                            <option value=\"India\">India</option>\n                            <option value=\"Indonesia\">Indonesia</option>\n                            <option value=\"Iran\">Iran (Islamic Republic of)</option>\n                            <option value=\"Iraq\">Iraq</option>\n                            <option value=\"Ireland\">Ireland</option>\n                            <option value=\"Israel\">Israel</option>\n                            <option value=\"Italy\">Italy</option>\n                            <option value=\"Jamaica\">Jamaica</option>\n                            <option value=\"Japan\">Japan</option>\n                            <option value=\"Jordan\">Jordan</option>\n                            <option value=\"Kazakhstan\">Kazakhstan</option>\n                            <option value=\"Kenya\">Kenya</option>\n                            <option value=\"Kiribati\">Kiribati</option>\n                            <option value=\"Democratic People's Republic of Korea\">Korea, Democratic People's Republic of</option>\n                            <option value=\"Korea\">Korea, Republic of</option>\n                            <option value=\"Kuwait\">Kuwait</option>\n                            <option value=\"Kyrgyzstan\">Kyrgyzstan</option>\n                            <option value=\"Lao\">Lao People's Democratic Republic</option>\n                            <option value=\"Latvia\">Latvia</option>\n                            <option value=\"Lebanon\">Lebanon</option>\n                            <option value=\"Lesotho\">Lesotho</option>\n                            <option value=\"Liberia\">Liberia</option>\n                            <option value=\"Libyan Arab Jamahiriya\">Libyan Arab Jamahiriya</option>\n                            <option value=\"Liechtenstein\">Liechtenstein</option>\n                            <option value=\"Lithuania\">Lithuania</option>\n                            <option value=\"Luxembourg\">Luxembourg</option>\n                            <option value=\"Macau\">Macau</option>\n                            <option value=\"Macedonia\">Macedonia, The Former Yugoslav Republic of</option>\n                            <option value=\"Madagascar\">Madagascar</option>\n                            <option value=\"Malawi\">Malawi</option>\n                            <option value=\"Malaysia\">Malaysia</option>\n                            <option value=\"Maldives\">Maldives</option>\n                            <option value=\"Mali\">Mali</option>\n                            <option value=\"Malta\">Malta</option>\n                            <option value=\"Marshall Islands\">Marshall Islands</option>\n                            <option value=\"Martinique\">Martinique</option>\n                            <option value=\"Mauritania\">Mauritania</option>\n                            <option value=\"Mauritius\">Mauritius</option>\n                            <option value=\"Mayotte\">Mayotte</option>\n                            <option value=\"Mexico\">Mexico</option>\n                            <option value=\"Micronesia\">Micronesia, Federated States of</option>\n                            <option value=\"Moldova\">Moldova, Republic of</option>\n                            <option value=\"Monaco\">Monaco</option>\n                            <option value=\"Mongolia\">Mongolia</option>\n                            <option value=\"Montserrat\">Montserrat</option>\n                            <option value=\"Morocco\">Morocco</option>\n                            <option value=\"Mozambique\">Mozambique</option>\n                            <option value=\"Myanmar\">Myanmar</option>\n                            <option value=\"Namibia\">Namibia</option>\n                            <option value=\"Nauru\">Nauru</option>\n                            <option value=\"Nepal\">Nepal</option>\n                            <option value=\"Netherlands\">Netherlands</option>\n                            <option value=\"Netherlands Antilles\">Netherlands Antilles</option>\n                            <option value=\"New Caledonia\">New Caledonia</option>\n                            <option value=\"New Zealand\">New Zealand</option>\n                            <option value=\"Nicaragua\">Nicaragua</option>\n                            <option value=\"Niger\">Niger</option>\n                            <option value=\"Nigeria\">Nigeria</option>\n                            <option value=\"Niue\">Niue</option>\n                            <option value=\"Norfolk Island\">Norfolk Island</option>\n                            <option value=\"Northern Mariana Islands\">Northern Mariana Islands</option>\n                            <option value=\"Norway\">Norway</option>\n                            <option value=\"Oman\">Oman</option>\n                            <option value=\"Pakistan\">Pakistan</option>\n                            <option value=\"Palau\">Palau</option>\n                            <option value=\"Panama\">Panama</option>\n                            <option value=\"Papua New Guinea\">Papua New Guinea</option>\n                            <option value=\"Paraguay\">Paraguay</option>\n                            <option value=\"Peru\">Peru</option>\n                            <option value=\"Philippines\">Philippines</option>\n                            <option value=\"Pitcairn\">Pitcairn</option>\n                            <option value=\"Poland\">Poland</option>\n                            <option value=\"Portugal\">Portugal</option>\n                            <option value=\"Puerto Rico\">Puerto Rico</option>\n                            <option value=\"Qatar\">Qatar</option>\n                            <option value=\"Reunion\">Reunion</option>\n                            <option value=\"Romania\">Romania</option>\n                            <option value=\"Russia\">Russian Federation</option>\n                            <option value=\"Rwanda\">Rwanda</option>\n                            <option value=\"Saint Kitts and Nevis\">Saint Kitts and Nevis</option>\n                            <option value=\"Saint LUCIA\">Saint LUCIA</option>\n                            <option value=\"Saint Vincent\">Saint Vincent and the Grenadines</option>\n                            <option value=\"Samoa\">Samoa</option>\n                            <option value=\"San Marino\">San Marino</option>\n                            <option value=\"Sao Tome and Principe\">Sao Tome and Principe</option>\n                            <option value=\"Saudi Arabia\">Saudi Arabia</option>\n                            <option value=\"Senegal\">Senegal</option>\n                            <option value=\"Seychelles\">Seychelles</option>\n                            <option value=\"Sierra\">Sierra Leone</option>\n                            <option value=\"Singapore\">Singapore</option>\n                            <option value=\"Slovakia\">Slovakia (Slovak Republic)</option>\n                            <option value=\"Slovenia\">Slovenia</option>\n                            <option value=\"Solomon Islands\">Solomon Islands</option>\n                            <option value=\"Somalia\">Somalia</option>\n                            <option value=\"South Africa\">South Africa</option>\n                            <option value=\"South Georgia\">South Georgia and the South Sandwich Islands</option>\n                            <option value=\"Span\">Spain</option>\n                            <option value=\"SriLanka\">Sri Lanka</option>\n                            <option value=\"St. Helena\">St. Helena</option>\n                            <option value=\"St. Pierre and Miguelon\">St. Pierre and Miquelon</option>\n                            <option value=\"Sudan\">Sudan</option>\n                            <option value=\"Suriname\">Suriname</option>\n                            <option value=\"Svalbard\">Svalbard and Jan Mayen Islands</option>\n                            <option value=\"Swaziland\">Swaziland</option>\n                            <option value=\"Sweden\">Sweden</option>\n                            <option value=\"Switzerland\">Switzerland</option>\n                            <option value=\"Syria\">Syrian Arab Republic</option>\n                            <option value=\"Taiwan\">Taiwan, Province of China</option>\n                            <option value=\"Tajikistan\">Tajikistan</option>\n                            <option value=\"Tanzania\">Tanzania, United Republic of</option>\n                            <option value=\"Thailand\">Thailand</option>\n                            <option value=\"Togo\">Togo</option>\n                            <option value=\"Tokelau\">Tokelau</option>\n                            <option value=\"Tonga\">Tonga</option>\n                            <option value=\"Trinidad and Tobago\">Trinidad and Tobago</option>\n                            <option value=\"Tunisia\">Tunisia</option>\n                            <option value=\"Turkey\">Turkey</option>\n                            <option value=\"Turkmenistan\">Turkmenistan</option>\n                            <option value=\"Turks and Caicos\">Turks and Caicos Islands</option>\n                            <option value=\"Tuvalu\">Tuvalu</option>\n                            <option value=\"Uganda\">Uganda</option>\n                            <option value=\"Ukraine\">Ukraine</option>\n                            <option value=\"United Arab Emirates\">United Arab Emirates</option>\n                            <option value=\"United Kingdom\">United Kingdom</option>\n                            <option value=\"United States\">United States</option>\n                            <option value=\"United States Minor Outlying Islands\">United States Minor Outlying Islands</option>\n                            <option value=\"Uruguay\">Uruguay</option>\n                            <option value=\"Uzbekistan\">Uzbekistan</option>\n                            <option value=\"Vanuatu\">Vanuatu</option>\n                            <option value=\"Venezuela\">Venezuela</option>\n                            <option value=\"Vietnam\">Viet Nam</option>\n                            <option value=\"Virgin Islands (British)\">Virgin Islands (British)</option>\n                            <option value=\"Virgin Islands (U.S)\">Virgin Islands (U.S.)</option>\n                            <option value=\"Wallis and Futana Islands\">Wallis and Futuna Islands</option>\n                            <option value=\"Western Sahara\">Western Sahara</option>\n                            <option value=\"Yemen\">Yemen</option>\n                            <option value=\"Yugoslavia\">Yugoslavia</option>\n                            <option value=\"Zambia\">Zambia</option>\n                            <option value=\"Zimbabwe\">Zimbabwe</option>\n                        </select>\n                        <input\n                            type=\"text\"\n                            placeholder=\"    Username\"\n                            ref=\"username\"\n                            className=\"input\"\n                            name=\"username\"\n                            onChange={this.handleChange}\n                        />\n                        <input\n                            type=\"password\"\n                            placeholder=\"    Password\"\n                            className=\"input\"\n                            ref=\"password\"\n                            name=\"password\"\n                            onChange={this.handleChange}\n                        />\n\n                        <input\n                            type=\"password\"\n                            placeholder=\"    Confirm password\"\n                            className=\"input\"\n                            ref=\"confirm_password\"\n                            name=\"confirm_password\"\n                            onChange={this.handleChange}\n                        />\n\n                        <input\n                            type=\"text\"\n                            placeholder=\"    E-mail\"\n                            className=\"input\"\n                            ref=\"email\"\n                            name=\"email\"\n                            onChange={this.handleChange}\n                        />\n\n                        <input\n                            type=\"text\"\n                            placeholder=\"    Confirm e-mail\"\n                            name=\"confirm_email\"\n                            ref=\"confirm_email\"\n                            className=\"input\"\n                        />\n\n                        <button type=\"submit\" className=\"sign-up-input\">Sign Up</button>\n                    </form>\n                </div>\n\n                <Footer />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Register;\n","import React, { Component } from \"react\";\nimport Footer from \"../bottom-section/footer\";\nimport DjangoCSRFToken from \"django-react-csrftoken\";\nimport Cookies from 'js-cookie'\n\n\nclass Login extends Component {\n    state = {\n        username: \"\",\n        password: \"\"\n    };\n\n\n\n    csrftoken = Cookies.get('csrftoken');\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        fetch(\"/LoginAPI/\", {\n            headers: { \"Content-Type\": \"application/json\", 'X-CSRFToken': this.csrfToken },\n            // headers: { \"Content-Type\": \"application/json\" },\n            credentials: \"include\",\n            mode: \"same-origin\",\n            method: \"POST\",\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password\n            })\n        }).then(async (response) => {\n\n            await response.json().then(data =>{\n                if (data === \"allow\"){\n\n\n                    // Set logged in in the index state to true.\n                    this.props.onUserLogin();\n\n                    // redirect.\n                    this.props.history.replace(\"/\");\n                }else{\n                    // Do something if user isn't authenticated\n                    console.log(\"user not logged in\")\n                }\n            } )\n        })\n\n    };\n\n    // update username and password value to the state\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"sign-in\">\n                    <form onSubmit={this.handleSubmit}>\n                        <DjangoCSRFToken />\n                        <input\n                            type=\"text\"\n                            className=\"input\"\n                            ref=\"username\"\n                            name=\"username\"\n                            placeholder=\"    Username\"\n                            onChange={this.handleChange}\n                        />\n                        <input\n                            type=\"password\"\n                            className=\"input\"\n                            ref=\"password\"\n                            name=\"password\"\n                            placeholder=\"    Password\"\n                            onChange={this.handleChange}\n                        />\n                        <button type=\"submit\" className=\"sign-up-input\">Login</button>\n                    </form>\n                </div>\n                <Footer />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport Footer from \"../bottom-section/footer\";\nimport { Link } from \"react-router-dom\";\n\nclass Cart extends Component {\n    // Make a select element with options\n    returnOptionElements = (quantity, id) => {\n        let optionElements = [];\n        for (let i = 1; i <= 10; i++) {\n            if (i !== 10) {\n                let element = <option key={i}>{i}</option>;\n                optionElements.push(element);\n            } else {\n                let element = <option key={i}>{i}</option>;\n                optionElements.push(element);\n                return (\n                    // Default value is equals to selected on one of the elements in regular HTML5 but it's placed in the select element.\n                    <select id={id} defaultValue={quantity} onChange={this.handleSelectChange} >\n                        {optionElements}\n                    </select>\n                );\n            }\n        }\n    };\n\n    handleSelectChange = event => {\n        const id = event.currentTarget.id;\n        const quantity = event.currentTarget.value;\n        this.props.onQuantityUpdate(id, quantity);\n    };\n\n    returnCartTotal = () => {\n        let total = 0;\n        const cartProducts = this.props.cartProducts;\n        for (let product of cartProducts) {\n            total += product.quantity * parseInt(product.price);\n        }\n        return total;\n    };\n\n    render() {\n        if (this.props.cartProducts.length > 0) {\n            return (\n                <React.Fragment>\n                    <div className=\"products-list-section\">\n\n                        {this.props.cartProducts.map(product => (\n                            <div key={product.product_id}>\n                                <Link to={{\n                                    pathname: \"/home/productdetails\", state: { product, title: product.product_id }\n                                }}>\n                                    <img src={product.imgUrl} alt={product.title} className=\"featured-show\" />\n                                </Link>\n                                <div className=\"price-add\">\n                                    <span>\n                                        <em>Price:{product.price}$</em>\n                                    </span>\n                                    <span>\n                                        <em>Quantity: </em>\n                                        {this.returnOptionElements(product.quantity, product.product_id)}\n                                    </span>\n                                </div>\n                            </div>\n                        ))}\n                        <div className=\"total\">Subtotal: {this.returnCartTotal()}$</div>\n\n                    </div>\n                    <Footer />\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <div className=\"products-list-section\">\n                        <h1 style={{ height: \"100%\" }}>Your cart is empty !</h1>\n                    </div>\n                    <Footer />\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nexport default Cart;\n","import React, { Component } from \"react\";\nimport Footer from \"./../bottom-section/footer\";\n\nclass ContactUs extends Component {\n    handleSubmit = event => {\n        event.preventDefault();\n    };\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"contact-us\" onSubmit={this.handleSubmit}>\n                    <form id=\"contact-us-form\">\n                        <div>\n                            <input className=\"input\" placeholder=\"    First name\" />\n                            <input className=\"input\" placeholder=\"    Last name\" />\n                        </div>\n                        <div>\n                            <input className=\"input\" placeholder=\"    Phone\" />\n                            <input className=\"input\" placeholder=\"    E-mail\" />\n                        </div>\n                        <div>\n                            <textarea\n                                className=\"input\"\n                                placeholder=\"    Message....\"\n                                form=\"contact-us-form\"\n                                rows=\"10\"\n                                cols=\"45\"\n                            />\n                        </div>\n                        <button type=\"submit\">Send</button>\n                    </form>\n                </div>\n                <Footer />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ContactUs;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faArrowAltCircleRight,\n    faArrowAltCircleLeft\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\n// All Images needs to be replaced with a loading icon incase images aren't loaded from the server yet\n\nclass NewArrivals extends Component {\n    counter = 0;\n\n    componentDidMount() {\n        if (!this.props.loading) {\n        if (this.refs.newarrivals.childNodes.length > 0 ){\n            this.refs.newarrivals.childNodes[0].childNodes[0].className = \"show\"\n        }\n    }\n}\n\n    componentDidUpdate() {\n        if (!this.props.loading) {\n        const length = this.refs.newarrivals.childNodes.length;\n        for (let index = 1; index < length; index++) {\n            this.refs.newarrivals.childNodes[index].firstChild.className = \"hide\";\n        }\n        this.refs.newarrivals.childNodes[this.counter].firstChild.className = \"show\";\n        }\n    }\n\n    getSlideImages = () => {\n        let newArrivals = this.props.products.filter(\n            product => product.newarrival === true\n        );\n        const imgs = newArrivals.map(product => (\n            <Link to={{ pathname: \"/home/productdetails\", state: { product, title: product.product_id } }}\n                key={product.product_id}\n                id={product.product_id}>\n                <img src={product.imgUrl} alt={product.title} className=\"hide\" />\n            </Link>\n        ));\n        return imgs;\n    };\n\n    handleNextClick = () => {\n        const length = this.refs.newarrivals.childNodes.length;\n        if (this.counter < length - 1) this.counter++;\n        else this.counter = 0;\n        for (let index = 0; index < length; index++) {\n            this.refs.newarrivals.childNodes[index].firstChild.className = \"hide\";\n        }\n        this.refs.newarrivals.childNodes[this.counter].firstChild.className = \"show\";\n    };\n\n    handlePrevClick = () => {\n        const length = this.refs.newarrivals.childNodes.length;\n        if (this.counter === 0) this.counter = length - 1;\n        else this.counter--;\n        for (let index = 0; index < length; index++) {\n            this.refs.newarrivals.childNodes[index].firstChild.className = \"hide\";\n        }\n        this.refs.newarrivals.childNodes[this.counter].firstChild.className = \"show\";\n    };\n\n    render() {\n        if (this.props.loading) {\n            return <h1>Loading....</h1>;\n        } else {\n            return (\n                <React.Fragment>\n                    <div className=\"new-arrivals-container\">\n                        <FontAwesomeIcon\n                            className=\"prev-arrow\"\n                            icon={faArrowAltCircleLeft}\n                            onClick={() => this.handlePrevClick()}\n                        />\n                        <div className=\"newarrivals-images-div\" ref=\"newarrivals\">\n                            {this.getSlideImages()}\n                        </div>\n                        <FontAwesomeIcon\n                            className=\"next-arrow\"\n                            icon={faArrowAltCircleRight}\n                            onClick={() => this.handleNextClick()}\n                        />\n                    </div>\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nexport default NewArrivals;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\nimport Footer from \"./../bottom-section/footer\";\n\nclass Products extends Component {\n    state = {\n        selectedProducts: [],\n        selectValues: {},\n        updated: false\n    };\n\n\n    componentDidMount() {\n        let selectedProducts = [...this.state.selectedProducts];\n        selectedProducts = this.props.products.filter(\n            product => product.category === this.props.selectedCategory\n        );\n        this.setState({ selectedProducts });\n        if (this.state.updated === false) {\n            this.setSelectValues();\n            this.setState({ updated: true });\n        }\n    }\n\n    // Create 10 options for the product quantity\n    returnSelectElements() {\n        const index = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n        const options = index.map(num => (\n            <option value={num} key={num}>\n                {num}\n            </option>\n        ));\n        return options;\n    }\n\n    // assign initial values for select menu\n    setSelectValues = () => {\n        let selectValues = { ...this.state.selectValues };\n        this.props.products.forEach(product => {\n            selectValues[product.product_id] = 1;\n        });\n        this.setState({ selectValues });\n    };\n\n    // Update the quantity of the current product in the state\n    handleQuantityChange = (id, quantity) => {\n        let selectValues = { ...this.state.selectValues };\n        selectValues[id] = parseInt(quantity);\n        this.setState({ selectValues });\n    };\n\n    handleCategoryClick = selectedCategory => {\n        let selectedProducts = [...this.state.selectedProducts];\n        selectedProducts = this.props.products.filter(\n            product => product.category === selectedCategory\n        );\n        this.props.onCategoryChange(selectedCategory);\n        this.setState({ selectedProducts });\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"products-main\">\n                    <div className=\"products-category-selection-menu\">\n                        <button\n                            className=\"category-link\"\n                            onClick={() => this.handleCategoryClick(\"coats\")}>Coats\n                        </button>\n                        <button\n                            className=\"category-link-two\"\n                            onClick={() => this.handleCategoryClick(\"shoes\")}>Shoes\n                    </button>\n                    </div>\n                    <div className=\"products-list-section\">\n                        {this.state.selectedProducts.map(product => (\n                            <div key={product.product_id}>\n                                <Link to={{ pathname: \"/home/productdetails\", state: { product, title: product.producct_id } ``}}>\n                                    <img src={product.imgUrl} alt={product.title} className=\"featured-show\" />\n                                </Link>\n                                <div className=\"price-add\">\n                                    <span>\n                                        <em>Price:{product.price}$</em>\n                                    </span>\n                                    <span>\n                                        <select onChange={event => { this.handleQuantityChange(product.product_id, event.currentTarget.value); }}>{this.returnSelectElements()}</select>\n                                    </span>\n                                    <button className=\"add-to-cart-button\" onClick={() => this.props.onAddToCart(product, this.state.selectValues[product.product_id])}\n                                    >Add to Cart\n                                    <FontAwesomeIcon\n                                            className=\"add-to-cart-icon\"\n                                            icon={faShoppingCart}\n                                            onClick={() => this.props.onAddToCart(product, this.state.selectValues[product.product_id])} />\n                                    </button>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <Footer />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Products;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\n\nclass ProductDetails extends Component {\n\n\n    state = { selectValues: 0, updated: false };\n\n\n    product = this.props.location.state.product\n\n\n    //call the setSelectValues then change the updated to true to prevent rerendering to prevent the\n    // MaximumDepthExceeded error.\n    componentDidMount() {\n        if (!this.state.updated && this.product) {\n            this.setSelectValues();\n            this.setState({ updated: true });\n        }\n    }\n\n\n    // assign initial values for select menu\n    setSelectValues = () => {\n        let selectValues = { ...this.state.selectValues };\n        selectValues = 1;\n        this.setState({ selectValues });\n    };\n\n\n\n    // Update the quantity of the current product in the state\n    handleQuantityChange = (quantity) => {\n        let selectValues = { ...this.state.selectValues };\n        selectValues = parseInt(quantity);\n        this.setState({ selectValues });\n    };\n\n\n\n\n    // Create 10 options for the product quantity\n    returnSelectElements() {\n        const index = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n        const options = index.map(num => (<option value={num} key={num}>{num}</option>));\n        return options;\n    }\n\n    render() {\n        const product = this.props.location.state.product\n        // We can add a \"if \" statement to check if the product image url is returned or not\n        // if not we could just return a loading icon.\n\n\n        if (this.state.updated) {\n\n\n            return (\n                <React.Fragment>\n                    <div className=\"product-details\">\n\n                        <div>\n                            <h1>{product.title}</h1>\n                        </div>\n\n                        <div>\n                            <img src={product.imgUrl} alt={product.title} />\n                        </div>\n\n                        <div className=\"price-add\">\n                            <span><em>Price:{product.price}$</em></span>\n                            <select onChange={event => { this.handleQuantityChange(event.currentTarget.value); }}>\n                                {this.returnSelectElements()}\n                            </select>\n                            <button className=\"add-to-cart-button\"\n                                onClick={() => this.props.onAddToCart(product, this.state.selectValues)}>Add to Cart\n                                <FontAwesomeIcon className=\"add-to-cart-icon\" icon={faShoppingCart}\n                                    onClick={() => this.props.onAddToCart(product, this.state.selectValues)} />\n                            </button>\n                        </div>\n\n                    </div>\n                </React.Fragment >\n            );\n\n        } else {\n            return <h1>loading....</h1>\n        }\n\n    }\n}\n\nexport default ProductDetails;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nclass SearchResults extends Component {\n    searchedProducts = () => {\n        const { products, searchInput } = this.props;\n        let searchedProducts = products.filter(product =>\n            product.title.toLowerCase().includes(searchInput)\n        );\n        if (searchedProducts.length > 0) {\n            return (\n                <div className=\"products-list-section\" ref=\"productresult\">\n                    {searchedProducts.map(product => (\n                        <div key={product.product_id}>\n                            <Link to={{ pathname: \"/home/productdetails\", state: { product, title: product.product_id } }}>\n                                <img src={product.imgUrl} alt={product.title} className=\"featured-show\" />\n                            </Link>\n                            <div className=\"price-add\">\n                                <span>\n                                    <em>Price:{product.price}$</em>\n                                </span>\n                                <button\n                                    className=\"add-to-cart-button\"\n                                    onClick={() => this.props.onAddToCart(product)}>Add to Cart\n                                    <FontAwesomeIcon\n                                        className=\"add-to-cart-icon\"\n                                        icon={faShoppingCart}\n                                        onClick={() => this.props.onAddToCart(product)} />\n                                </button>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            );\n        } else {\n            return <h1>Product-Not-Found</h1>;\n        }\n    };\n\n    render() {\n        return <React.Fragment>{this.searchedProducts()}</React.Fragment>;\n    }\n}\n\nexport default SearchResults;\n","import React, { Component } from \"react\";\nimport Nav from \"./top-section/nav\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Featured from \"./middle-section/featured\";\nimport Register from \"./top-section/register\";\nimport Login from \"./top-section/login\";\nimport Cart from \"./top-section/cart\";\nimport Footer from \"./bottom-section/footer\";\nimport ContactUs from \"./top-section/contact-us\";\nimport NewArrivals from \"./middle-section/new-arrivals\";\nimport Products from \"./middle-section/products\";\nimport ProductDetails from \"./product-details\";\nimport SearchResults from \"./middle-section/search-results\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { handleLogout } from \"../services/logout\";\nimport Cookies from 'js-cookie'\n\nclass Index extends Component {\n    state = {\n        featuredProducts: [],\n        cartProducts: [],\n        newArrivals: [],\n        products: [],\n        userAuthenticated: false,\n        searchInput: false,\n        menuOn: false,\n        loading: true,\n        selectedCategory: \"coats\",\n    };\n\n    mounted = false;\n\n    componentDidMount() {\n        console.log(\"component mounted\")\n        fetch(\"/DBProductsAPI/\", {\n            headers: { \"Content-Type\": \"application/json\" },\n            credentials: \"include\",\n            mode: \"same-origin\",\n            method: \"GET\",\n        }).then( (response) => {\n            response.json().then((data) => {\n                if (data){\n                    const  products =  JSON.parse(data[1]).map(product => product.fields)\n                    this.setState({ products, loading: false, userAuthenticated:data[0] });\n                }\n\n            })\n        })\n\n        if (this.state.userAuthenticated){\n            fetch(\"/CartProducts/\", {\n                headers: { \"Content-Type\": \"application/json\" },\n                credentials: \"include\",\n                mode: \"same-origin\",\n                method: \"GET\",\n            }).then( (response) => {\n                if (response.status === 200){\n                    response.json().then(cartProducts => {\n                        cartProducts = JSON.parse(cartProducts).map(product => product.fields)\n                        this.setState({ cartProducts, loading:false  });\n                    })\n                }\n            }\n            )\n        // Else, get it from localStorage\n        }else{\n            const cartProducts = JSON.parse(localStorage.getItem(\"cart\"));\n            if(cartProducts)\n                this.setState({cartProducts, loading:false});\n        }\n\n        this.mounted = true;\n\n    }\n\n    componentWillUnmount() {\n        this.setState({loading:true, userAuthenticated:false})\n        this.mounted = false;\n    }\n\n    redirect = this.props.history.replace;\n\n    handleClick = url => {\n        if (window.innerWidth <= 768) {\n            this.redirect(url);\n            this.setState({ menuOn: false });\n        } else this.redirect(url);\n    };\n\n    //To be replaced by refs or a CSS class\n    handleSelectClick = () => {\n        const navContainer = document.getElementById(\"nav-main\");\n        if (navContainer.style.display === \"grid\")\n            navContainer.style.display = \"none\";\n        else navContainer.style.display = \"grid\";\n    };\n    csrftoken = Cookies.get('csrftoken');\n\n    handleAddToCart = (product, quantity) => {\n        // Add the quantity to the product\n        product.quantity = quantity\n        quantity = parseInt(quantity)\n        const cartProducts = [...this.state.cartProducts];\n        const foundProduct = cartProducts.find(prod => prod.product_id === product.product_id);\n        if (this.state.userAuthenticated){\n            let quantityTotal = 0\n            if (foundProduct){\n                quantityTotal = (foundProduct.quantity + quantity)\n                if (quantityTotal > 10){\n                    alert(\"Maximum quantity to purchase is 10 items.\")\n                    return;\n                }else{\n                    foundProduct.quantity += quantity\n                }\n            }else{\n                cartProducts.push(product)\n            }\n            fetch(\"/CartProducts/\", {\n                headers: {\n                    \"Content-Type\": \"application/json\" ,\n                    'X-CSRFToken': this.csrftoken,\n                    \"Accept\": \"application/json\",\n                },\n                credentials: \"same-origin\",\n                mode: \"same-origin\",\n                method: \"POST\",\n                body: JSON.stringify(product)\n            }).then(response => {\n                window.location.reload();\n            })\n        // If user idn't authenticated\n        }else{\n                if (foundProduct){\n                    foundProduct.quantity += quantity\n                    localStorage.setItem(\"cart\", JSON.stringify(cartProducts))\n                    this.setState({cartProducts:JSON.parse(localStorage.getItem(\"cart\"))})\n                }else{\n                    cartProducts.push(product)\n                    localStorage.setItem(\"cart\", JSON.stringify(cartProducts))\n                    this.setState({cartProducts:JSON.parse(localStorage.getItem(\"cart\"))})\n                }\n\n        }\n\n\n\n    }\n\n    handleQuantityUpdate = (id, quantity) => {\n        quantity = parseInt(quantity)\n        let cartProducts = [...this.state.cartProducts];\n        let foundProduct = cartProducts.find(prod => prod.product_id === parseInt(id));\n        let difference = 0\n        // if the current quantity in the state is smaller than the quantity given\n        if (this.state.userAuthenticated){\n            switch (true){\n                case (quantity > foundProduct.quantity) :\n                    difference = (quantity - foundProduct.quantity)\n                    break;\n                case (foundProduct.quantity > quantity):\n                    difference  = -(foundProduct.quantity - quantity)\n                    break;\n                default:\n                    break;\n            }\n\n            foundProduct.quantity = difference\n            fetch(\"/CartProducts/\", {\n                headers: {\n                    \"Content-Type\": \"application/json\" ,\n                    'X-CSRFToken': this.csrftoken,\n                    \"Accept\": \"application/json\",\n                },\n                credentials: \"same-origin\",\n                mode: \"same-origin\",\n                method: \"POST\",\n                body: JSON.stringify(foundProduct)\n            }).then(response => {\n                window.location.reload();\n            })\n            // this.handleAddToCart(foundProduct, difference)\n\n\n        }else{\n            console.log(\"User isn't authenticated\")\n            // foundProduct.quantity = parseInt(quantity);\n            // this.setState({ cartProducts });\n            // localStorage.setItem(\"cart\", JSON.stringify(cartProducts))\n\n            \n        }\n\n    };\n\n    handleSearchInput = searchInput => {\n        this.setState({ searchInput });\n    };\n\n    handleCategoryChange = selectedCategory => {\n        this.setState({ selectedCategory });\n    };\n    homePageComponents = () => {\n        const featuredProducts = this.state.products.filter(\n            product => product.featured === true\n        );\n        if (this.props.history.location.pathname === \"/home\") {\n            return (\n                <React.Fragment>\n                    <NewArrivals\n                        loading={this.state.loading}\n                        products={this.state.products}\n                        onProductClick={this.handleProductClick}\n                    />\n                    <Featured\n                        featuredProducts={featuredProducts}\n                        onAddToCart={this.handleAddToCart}\n                    />\n                    <Footer />\n                </React.Fragment>\n            );\n        }\n    };\n    ;\n    handleMenuClick = () => {\n        if (!this.state.menuOn) {\n            this.setState({ menuOn: true });\n            this.props.history.replace(\"/home\");\n        } else {\n            this.setState({ menuOn: false });\n        }\n    };\n\n    handleSearchSubmit = event => {\n        event.preventDefault();\n        this.handleSearchInput(this.refs.searchinput.value);\n        this.handleMenuClick();\n        this.props.history.replace(\"/home/search\");\n    };\n\n    handleUserLogin = () => {\n        // if (!this.state.userAuthenticated && this.mounted) {\n            this.setState({ userAuthenticated:true });\n        // }\n    };\n\n    handleUserLogout = () => {\n            handleLogout();\n            this.setState({  userAuthenticated:false }) \n            window.location.reload();\n            // this.props.history.replace(\"/\")\n    }\n\n\n    menuOnAuthenticationItems = () => {\n        if (localStorage.getItem(\"logged\")) {\n            return <li className=\"sign-in-lin\" onClick = {() => this.handleUserLogout()}>Logout</li>\n        }else{\n            return (\n            <React.Fragment>\n                <li className=\"sign-in-lin\" onClick={() => this.handleClick(\"/home/login\")}>Sign In</li>\n                <li className=\"sign-up-lin\" onClick={() => this.handleClick(\"/home/register\")}>Sign Up</li>\n            </React.Fragment>)\n        }\n    }\n\n    render() {\n        const { history } = this.props;\n        const { products, cartProducts, searchInput, selectedCategory } = this.state;\n        if (!this.state.menuOn) {\n            return (\n                <React.Fragment>\n                    <div className=\"index-main\" ref=\"main\">\n                        <Nav\n                            onSearchInputSubmit={this.handleSearchInput}\n                            history={history}\n                            products={products}\n                            cartProducts={cartProducts}\n                            onMenuClick={this.handleMenuClick}\n                            onLinkClick={this.handleClick}\n                            userAuthenticated={this.state.userAuthenticated}\n                            onUserLogout={this.handleUserLogout}\n                        />\n                        {this.homePageComponents()}\n                        <Switch>\n                            <Route path=\"/home/register\" component={props => (\n                                <Register {...props}  onUserLogin={this.handleUserLogin} />)} \n                            />\n                            <Route\n                                path=\"/home/login\"\n                                component={props => (\n                                    <Login {...props}\n                                        userAuthenticated={this.state.userAuthenticated}\n                                        onUserLogin={this.handleUserLogin} />\n                                )}\n                            />\n                            <Route\n                                path=\"/home/cart\"\n                                component={props => (\n                                    <Cart\n                                        onQuantityUpdate={this.handleQuantityUpdate}\n                                        cartProducts={cartProducts}\n                                        {...props}\n                                    />\n                                )}\n                            />\n                            <Route\n                                path=\"/home/search\"\n                                component={props => (\n                                    <SearchResults\n                                        products={products}\n                                        searchInput={searchInput}\n                                        onAddToCart={this.handleAddToCart}\n                                        {...props}\n                                    />\n                                )}\n                            />\n                            <Route\n                                path=\"/home/products\"\n                                component={props => (\n                                    <Products\n                                        products={products}\n                                        onAddToCart={this.handleAddToCart}\n                                        selectedCategory={selectedCategory}\n                                        onCategoryChange={this.handleCategoryChange}\n                                        {...props}\n                                    />\n                                )}\n                            />\n                            <Route\n                                path=\"/home/contact-us\"\n                                component={props => <ContactUs {...props} />}\n                            />\n                            <Route\n                                path=\"/home/productdetails\"\n                                component={props => (\n                                    <ProductDetails\n                                        {...props}\n                                        onAddToCart={this.handleAddToCart}\n                                    />\n                                )}\n                            />\n                            <Redirect from=\"/home/*\" to=\"/\" />\n                        </Switch>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <Nav\n                        onSearchInputSubmit={this.handleSearchInput}\n                        history={history}\n                        products={products}\n                        cartProducts={cartProducts}\n                        onMenuClick={this.handleMenuClick}\n                        onLinkClick={this.handleClick}\n                        userAuthenticated={this.state.userAuthenticated}\n                        onUserLogout={this.handleUserLogout}\n                    />\n                    <div className=\"menu-items\">\n                        <form className=\"search-form-menu\" onSubmit={this.handleSearchSubmit}>\n                            <FontAwesomeIcon className=\"search-icon-menu\" icon={faSearch} onClick={this.handleSearchClick} />\n                            <input\n                                className=\"search-field-menu\"\n                                type=\"search\"\n                                name=\"search\"\n                                onBlur={this.handleBlur}\n                                placeholder=\"     Search ...\"\n                                ref=\"searchinput\"\n                                autoFocus\n                            />\n                        </form>\n\n                        <ul className=\"nav-main-menu\" ref=\"nav\">\n                            <li className=\"products-lin\" onClick={() => this.handleClick(\"/home/products\")}>Products</li>\n                            {/* Login, logout and sign-up */}\n                            {this.menuOnAuthenticationItems()}\n                            <li className=\"contact-us-lin\" onClick={() => this.handleClick(\"/home/contact-us\")}>Contact Us</li>\n                        </ul>\n\n                    </div>\n                    <Switch>\n                        <Route\n                            path=\"/home/search\"\n                            component={props => (\n                                <SearchResults\n                                    products={products}\n                                    searchInput={searchInput}\n                                    onAddToCart={this.handleAddToCart}\n                                    {...props}\n                                />\n                            )}\n                        />\n                    </Switch>\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nexport default Index;\n","export function handleLogout  () {\n    fetch(\"/LogoutAPI/\", {\n        headers: { \"Content-Type\": \"application/json\" },\n        mode: \"same-origin\",\n        method: \"GET\",\n    })\n};","import { Switch, Route, Redirect } from \"react-router-dom\";\nimport React, { Component } from \"react\";\nimport Index from \"./components/index\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/home\" component={props => <Index {...props} />} />\n        <Redirect from=\"/\" to=\"/home\" />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport WebFont from \"webfontloader\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n\nWebFont.load({\n  google: {\n    families: [\"Ubuntu\", \"Pacifico\", \"sans-serif\"]\n  }\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}