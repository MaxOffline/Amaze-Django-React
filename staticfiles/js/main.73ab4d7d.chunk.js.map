{"version":3,"sources":["services/Ajax.js","services/handlers.js","components/top-section/search.jsx","components/top-section/nav.jsx","components/middle-section/featured.jsx","components/bottom-section/footer.jsx","services/validation.js","components/top-section/register.jsx","components/top-section/login.jsx","components/middle-section/checkout-form.jsx","components/top-section/cart.jsx","components/top-section/contact-us.jsx","components/middle-section/new-arrivals.jsx","components/middle-section/products.jsx","components/product-details.jsx","components/middle-section/search-results.jsx","components/middle-section/password-reset.jsx","components/index.jsx","App.js","serviceWorker.js","index.js"],"names":["csrftoken","Cookies","get","Ajax","url","method","body","fetch","headers","Content-Type","X-CSRFToken","Accept","credentials","mode","CONTROLLERS","handleAddToCart","_handleAddToCart","Object","asyncToGenerator","regenerator_default","a","mark","_callee","product","quantity","indexThis","cartProducts","foundProduct","wrap","_context","prev","next","handler","this","state","userAuthenticated","JSON","stringify","sent","status","updateCartFromDB","alert","toConsumableArray","find","prod","product_id","abrupt","localStorage","setItem","setState","parse","getItem","push","stop","_x","_x2","apply","arguments","handleQuantityUpdate","_handleQuantityUpdate","_callee2","localStorageCartItems","index","_context2","concat","indexOf","splice","_x3","handleProductRemove","_handleProductRemove","_callee3","productId","_context3","_x4","handleUserLogin","window","location","replace","handleUserLogout","_handleUserLogout","_callee4","_context4","reload","handleNavLinkClick","innerWidth","redirect","menuOn","handleSearchSubmit","searchInput","handleCategoryChange","selectedCategory","handleMenuClick","props","history","disableButton","ref","current","disabled","Search","event","preventDefault","_this","refs","searchinput","value","_this2","react_default","createElement","Fragment","className","onSubmit","index_es","icon","faSearch","onClick","onSearchClick","type","name","onBlur","onSearchBlur","placeholder","autoFocus","faTimes","Component","Nav","navLinkElementsIndexes","handleSearchClick","nav","childNodes","style","display","focus","forEach","width","handleSearchBlur","cartQuantity","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","parseInt","err","return","returnBasketElement","products","id","xmlns","viewBox","height","fill","d","search","aria-hidden","focusable","data-prefix","data-icon","class","role","fontSize","marginRight","Featured","selectValues","updated","setSelectValues","objectSpread","featuredProducts","handleQuantityChange","map","num","key","length","react_router_dom","to","pathname","title","src","imgUrl","alt","price","onChange","currentTarget","returnSelectElements","faShoppingCart","Footer","passwordValidation","firstPassword","secondPassword","numbers","hasEnoughLength","match","containsUppercase","containsNumbers","containsSpecials","split","letter","toUpperCase","includes","paymentFieldValidation","firstName","lastName","streetAddress","city","zip","email","validationResults","test","zipCode","allValid","zipValid","emailValid","Register","username","first_name","last_name","password","emailCode","validation","confirmPassword","usernameValid","passwordsMatch","passwordHasEnoughLength","passwordContainsUpperCase","passwordContainsNumbers","passwordContainsSpecials","emailsMatch","confirmEmail","codeForm","React","createRef","code","incorrectCode","signUp","handleSubmit","passwordValidationResult","response","usernameValidation","confirm_password","confirm_email","json","then","data","String","handleCodeFormSubmit","onUserLogin","handleChange","defineProperty","target","_ref","passwordMessages","emailMessages","backgroundColor","msg","returnValidationItems","django_react_csrftoken_default","defaultValue","color","footer","Login","csrfToken","CheckoutForm","complete","submit","_ref2","token","stripe","createToken","amount","total","entries","entry","border","handleClose","marginLeft","es","base","textAlign","marginTop","fontFamily","injectStripe","Cart","checkoutContainer","returnOptionElements","optionElements","i","element","handleSelectChange","onQuantityUpdate","returnCartTotal","handleCheckoutClick","onProductRemove","apiKey","checkout_form","ContactUs","form","rows","cols","NewArrivals","counter","getSlideImages","filter","newarrival","handleNextClick","newarrivals","firstChild","handlePrevClick","loading","faArrowAltCircleLeft","faArrowAltCircleRight","Products","selectedProducts","handleCategoryClick","category","onCategoryChange","_this3","producct_id","onAddToCart","ProductDetails","SearchResults","searchedProducts","_this$props","toLowerCase","PasswordReset","resetCode","emailForm","emailNoExist","emailAddress","newPasswordsForm","sendCodeButton","confirmCodeButton","resetPasswordButton","handleEmailFormSubmit","handleCodeConfirm","reset_code","handlePasswordReset","Index","newArrivals","mounted","fetchAllProducts","_response","_cartProducts","fields","menuOnAuthenticationItems","homePageComponents","featured","new_arrivals","onProductClick","handleProductClick","returnTheThis","bind","_this$state","handleBlur","react_router","path","component","search_results","assign","register","login","password_reset","cart","middle_section_products","contact_us","product_details","from","App","components","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","WebFont","load","google","families","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73ab4d7d.chunk.js","sourcesContent":["import Cookies from 'js-cookie'\nconst csrftoken = Cookies.get('csrftoken');\n\n\nconst Ajax =  (url, method, body) => {\n    let response = undefined\n    if(!body){\n        response =  fetch(url, {\n            headers: { \"Content-Type\": \"application/json\",'X-CSRFToken':csrftoken, \"Accept\": \"application/json\"},\n            credentials: \"include\",\n            mode: \"same-origin\",\n            method,\n        })\n    }else{\n        response =  fetch(url, {\n            headers: { \"Content-Type\": \"application/json\",'X-CSRFToken':csrftoken, \"Accept\": \"application/json\"},\n            credentials: \"include\",\n            mode: \"same-origin\",\n            method,\n            body,\n        })\n    }\n    \n    return  response\n}\n\n\nexport default Ajax;","import Ajax from \"./Ajax\";\nimport { handler } from \"../components\";\n\n\n\n\n\n\nexport const CONTROLLERS = {\n    // *******************************************************************************************************************************\n    // Porduct handling\n    async handleAddToCart(product, quantity)  {\n        const indexThis = handler.indexThis();\n        this.state = handler.indexThis().state;\n        // Add the quantity to the product\n        product.quantity = quantity\n        if (this.state.userAuthenticated){\n            // Add the product to the DB\n                const response = await Ajax(/CartProducts/, \"POST\", JSON.stringify(product));\n            // If product is successfully added\n            // Send another request to get the products in the DB...\n            // The reason we aren't using the state is because we are using a single source of truth.\n                response.status === 200 ? indexThis.updateCartFromDB() :alert(\"Maximum quantity to purchase is 10 items.\");\n                \n        }else{\n            const cartProducts = [...this.state.cartProducts];\n            const foundProduct = cartProducts.find(prod => prod.product_id === product.product_id);\n                if (foundProduct){\n                    if ((foundProduct.quantity+quantity) > 10){\n                        alert(\"Maximum quantity to purchase is 10 items.\")\n                        return;\n                    }else{\n                        foundProduct.quantity += quantity\n                        localStorage.setItem(\"cart\", JSON.stringify(cartProducts))\n                        indexThis.setState({cartProducts:JSON.parse(localStorage.getItem(\"cart\"))})\n                    }\n                }else{\n                    cartProducts.push(product)\n                    localStorage.setItem(\"cart\", JSON.stringify(cartProducts))\n                    indexThis.setState({cartProducts:JSON.parse(localStorage.getItem(\"cart\"))})\n                }\n    \n        }\n    },\n    \n    async handleQuantityUpdate(product)  {\n        const indexThis = handler.indexThis();\n        this.state = handler.indexThis().state;\n        if (this.state.userAuthenticated){\n            const response = await Ajax(`/UpdateProduct/${product.product_id}/`, \"PUT\", JSON.stringify(product))\n            response.status === 200? indexThis.updateCartFromDB(): alert(\"Maximum quantity to purchase is 10 items.\");\n        }else{\n            const localStorageCartItems = JSON.parse(localStorage.getItem(\"cart\"))\n            const foundProduct = localStorageCartItems.find(prod => prod.product_id === product.product_id)\n            const index = localStorageCartItems.indexOf(foundProduct);\n            foundProduct.quantity = product.quantity\n            localStorageCartItems.splice(index, 1)\n            localStorageCartItems.push(foundProduct)\n            localStorage.setItem(\"cart\", JSON.stringify(localStorageCartItems))\n            indexThis.setState({cartProducts:localStorageCartItems})\n        }\n    \n    },\n    \n    async handleProductRemove(productId)  {\n        const indexThis = handler.indexThis();\n        this.state = handler.indexThis().state;\n        if (this.state.userAuthenticated){\n            const response = await Ajax(`/RemoveProduct/${productId}/`, \"DELETE\")\n            response.status === 200?indexThis.updateCartFromDB():alert(\"Something went wrong\");\n        }else{\n            const localStorageCartItems = JSON.parse(localStorage.getItem(\"cart\"))\n            const foundProduct = localStorageCartItems.find(product => product.product_id === productId)\n            const index = localStorageCartItems.indexOf(foundProduct);\n            localStorageCartItems.splice(index, 1)\n            localStorage.setItem(\"cart\", JSON.stringify(localStorageCartItems))\n            indexThis.setState({cartProducts:localStorageCartItems})\n        }\n    },\n    \n    // *******************************************************************************************************************************\n    // User authentication \n    handleUserLogin() {\n        const indexThis = handler.indexThis();\n            indexThis.setState({ userAuthenticated:true });\n            window.location.replace(\"/\")\n    },\n    \n    async handleUserLogout() {\n        const indexThis = handler.indexThis();\n            const response = await Ajax(\"/LogoutAPI/\", \"GET\")\n            if (response.status === 200){\n                indexThis.setState({  userAuthenticated:false }) \n                window.location.reload();\n            }\n    },\n\n    // *******************************************************************************************************************************\n    // Miscelaneous \n    handleNavLinkClick(url)  {\n        const indexThis = handler.indexThis();\n        if (window.innerWidth <= 768) {\n            indexThis.redirect(url);\n            indexThis.setState({ menuOn: false });\n        } else { \n            indexThis.redirect(url);\n        }\n    },    \n    handleSearchSubmit(searchInput) {\n        const indexThis = handler.indexThis();\n        indexThis.setState({ searchInput });\n    },\n    \n    handleCategoryChange(selectedCategory) {\n        const indexThis = handler.indexThis();\n        indexThis.setState({ selectedCategory });\n    },\n    \n    handleMenuClick() {\n        const state = handler.indexThis().state;\n        const indexThis = handler.indexThis();\n        if (!state.menuOn) {\n            indexThis.setState({ menuOn: true });\n            indexThis.props.history.replace(\"/home\");\n        } else {\n            indexThis.setState({ menuOn: false });\n        }\n    },\n\n    disableButton(ref){\n        ref.current.disabled = true;\n    }\n    // *******************************************************************************************************************************\n}\n\n\n\n\n\n\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { CONTROLLERS } from \"../../services/handlers\";\nclass Search extends Component {\n    handleSearchSubmit = event => {\n        event.preventDefault();\n        CONTROLLERS.handleSearchSubmit(this.refs.searchinput.value);\n        this.props.replace(\"/home/search\");\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <form className=\"search-form\" onSubmit={this.handleSearchSubmit}>\n                    <FontAwesomeIcon\n                        className=\"search-icon\"\n                        icon={faSearch}\n                        onClick={() => this.props.onSearchClick()}\n                    />\n                    <input\n                        className=\"search-field\"\n                        type=\"search\"\n                        name=\"search\"\n                        onBlur={() =>this.props.onSearchBlur()}\n                        placeholder=\"     Search ...\"\n                        ref=\"searchinput\"\n                        autoFocus\n                    />\n                    <div ref=\"searchexit\" className=\"search-exit-container\">\n                        <FontAwesomeIcon\n                            className=\"search-exit\"\n                            icon={faTimes}\n                            onClick={() =>this.props.onSearchBlur()}\n                        />\n                    </div>\n                </form>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport Search from \"../top-section/search\";\nimport { CONTROLLERS } from \"../../services/handlers\";\n\nclass Nav extends Component {\n    redirect = this.props.history.replace;\n\n\n    // I should be able to replace this in CSS by using the hover // property because phones treat hover as click\n    navLinkElementsIndexes = [3,4,5,6]\n    handleSearchClick = () => {\n        if (!this.props.userAuthenticated){\n\n            this.refs.nav.childNodes[7].childNodes[1].style.display = \"inline-block\";\n            this.refs.nav.childNodes[7].childNodes[1].focus();\n            this.refs.nav.childNodes[7].childNodes[2].style.display = \"inline-block\";\n            this.navLinkElementsIndexes.forEach(index => this.refs.nav.childNodes[index].style.display = \"none\")\n            this.refs.nav.childNodes[7].style.width = \"30vw\";\n        }else{\n            this.navLinkElementsIndexes = [3,4,5]\n            this.refs.nav.childNodes[6].childNodes[1].style.display = \"inline-block\";\n            this.refs.nav.childNodes[6].childNodes[1].focus();\n            this.refs.nav.childNodes[6].childNodes[2].style.display = \"inline-block\";\n            this.navLinkElementsIndexes.forEach(index => this.refs.nav.childNodes[index].style.display = \"none\")\n            this.refs.nav.childNodes[6].style.width = \"30vw\";\n        }\n    };\n\n\n    handleSearchBlur = () => {\n        if (!this.props.userAuthenticated){\n            this.navLinkElementsIndexes.forEach(index => this.refs.nav.childNodes[index].style.display = \"\")\n            this.refs.nav.childNodes[7].style.width = \"\";\n            this.refs.nav.childNodes[7].childNodes[1].style.display = \"none\";\n            this.refs.nav.childNodes[7].childNodes[2].style.display = \"none\";\n        }else{\n            this.navLinkElementsIndexes = [3,4,5]\n            this.navLinkElementsIndexes.forEach(index => this.refs.nav.childNodes[index].style.display = \"\")\n            this.refs.nav.childNodes[6].style.width = \"\";\n            this.refs.nav.childNodes[6].childNodes[1].style.display = \"none\";\n            this.refs.nav.childNodes[6].childNodes[2].style.display = \"none\";\n        }\n        \n    }\n\n    cartQuantity = () => {\n        const cartProducts = this.props.cartProducts;\n        let quantity = 0;\n        for (let product of cartProducts) {\n            quantity += parseInt(product.quantity);\n        }\n        return quantity;\n    };\n\n\n    returnBasketElement = () => {\n        if (window.innerWidth > 768) {\n            return  (\n            <p className=\"cart-count\"\n                onClick={() => CONTROLLERS.handleNavLinkClick(\"/home/cart\")}>{this.cartQuantity()}\n            </p> \n            )\n        }\n        \n    }\n\n    render() {\n        const { products } = this.props;\n        if (!this.props.userAuthenticated){\n            return (\n                <div id=\"nav-main\">\n                    <ul className=\"nav-main\" ref=\"nav\">\n                        <li className=\"menu-bars\" onClick={CONTROLLERS.handleMenuClick}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\" width=\"33\" height=\"33\" fill=\"#be9b64\">\n                                <path d=\"M 0 9 L 0 11 L 50 11 L 50 9 Z M 0 24 L 0 26 L 50 26 L 50 24 Z M 0 39 L 0 41 L 50 41 L 50 39 Z\"/>\n                            </svg>\n                        </li>\n                        <li className=\"first-li\" />\n                        <li className=\"home-link\"\n                            onClick={() => CONTROLLERS.handleNavLinkClick(\"/home\")}>Kinzy</li>\n    \n                        <li className=\"products-link\"\n                            onClick={() => CONTROLLERS.handleNavLinkClick(\"/home/products\")}>Products</li>\n    \n                        <li className=\"sign-in-link\"\n                            onClick={() => CONTROLLERS.handleNavLinkClick(\"/home/login\")}> Sign In</li>\n                        <li className=\"sign-up-link\"\n                            onClick={() => CONTROLLERS.handleNavLinkClick(\"/home/register\")}>Sign Up</li>\n    \n                        <li className=\"contact-us-link\"\n                            onClick={() => CONTROLLERS.handleNavLinkClick(\"/home/contact-us\")}>Contact Us</li>\n    \n                        <Search\n                            onSearchClick={this.handleSearchClick}\n                            onSearchBlur = {this.handleSearchBlur}\n                            products={products}\n                            replace={this.props.history.replace}\n                        />\n                        <div ref=\"cart\" className=\"cart-main\">\n                        <svg onClick={() => CONTROLLERS.handleNavLinkClick(\"/home/cart\")} xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fab\" data-icon=\"opencart\" class=\"svg-inline--fa fa-opencart fa-w-20\" role=\"img\" viewBox=\"0 0 640 512\" ><path fill=\"currentColor\" d=\"M423.3 440.7c0 25.3-20.3 45.6-45.6 45.6s-45.8-20.3-45.8-45.6 20.6-45.8 45.8-45.8c25.4 0 45.6 20.5 45.6 45.8zm-253.9-45.8c-25.3 0-45.6 20.6-45.6 45.8s20.3 45.6 45.6 45.6 45.8-20.3 45.8-45.6-20.5-45.8-45.8-45.8zm291.7-270C158.9 124.9 81.9 112.1 0 25.7c34.4 51.7 53.3 148.9 373.1 144.2 333.3-5 130 86.1 70.8 188.9 186.7-166.7 319.4-233.9 17.2-233.9z\"></path></svg>\n                            {this.returnBasketElement()}\n                        </div>\n                        <li className=\"last-li\" />\n                    </ul>\n                </div>\n            );\n        }else{\n            return (\n                <div id=\"nav-main\">\n                    <ul className=\"nav-main\" ref=\"nav\">\n                        <li className=\"menu-bars\" onClick={CONTROLLERS.handleMenuClick}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\" width=\"33\" height=\"33\" fill=\"#be9b64\">\n                                    <path d=\"M 0 9 L 0 11 L 50 11 L 50 9 Z M 0 24 L 0 26 L 50 26 L 50 24 Z M 0 39 L 0 41 L 50 41 L 50 39 Z\"/>\n                            </svg>\n                        </li>\n                        <li className=\"first-li\" />\n                        <li className=\"home-link\"\n                            onClick={ () => CONTROLLERS.handleNavLinkClick(\"/home\")}>Kinzy</li>\n    \n                        <li className=\"products-link\"\n                            onClick={() => CONTROLLERS.handleNavLinkClick(\"/home/products\")}>Products</li>\n    \n        \n                        <li className=\"sign-in-link\" onClick={CONTROLLERS.handleUserLogout}>Logout</li>\n\n    \n                        <li className=\"contact-us-link\"\n                            onClick={() => CONTROLLERS.handleNavLinkClick(\"/home/contact-us\")}>Contact Us</li>\n    \n                        <Search\n                            onSearchClick={this.handleSearchClick}\n                            onSearchBlur = {this.handleSearchBlur}\n                            products={products}\n                            replace={this.props.history.replace}\n                        />\n                        <div ref=\"cart\" className=\"cart-main\">\n                        <svg onClick={() => CONTROLLERS.handleNavLinkClick(\"/home/cart\")} xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fab\" data-icon=\"opencart\" class=\"svg-inline--fa fa-opencart fa-w-20\" role=\"img\" viewBox=\"0 0 640 512\" style={{fontSize: \"24px;\",marginRight:\"10px;\"}}><path fill=\"currentColor\" d=\"M423.3 440.7c0 25.3-20.3 45.6-45.6 45.6s-45.8-20.3-45.8-45.6 20.6-45.8 45.8-45.8c25.4 0 45.6 20.5 45.6 45.8zm-253.9-45.8c-25.3 0-45.6 20.6-45.6 45.8s20.3 45.6 45.6 45.6 45.8-20.3 45.8-45.6-20.5-45.8-45.8-45.8zm291.7-270C158.9 124.9 81.9 112.1 0 25.7c34.4 51.7 53.3 148.9 373.1 144.2 333.3-5 130 86.1 70.8 188.9 186.7-166.7 319.4-233.9 17.2-233.9z\" style={{fill:\"#be9b64;\"}}></path></svg>\n                            {this.returnBasketElement()}\n                        </div>\n                        <li className=\"last-li\" />\n                    </ul>\n                </div>\n            );\n        }\n\n    }\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\nimport { CONTROLLERS } from \"../../services/handlers\";\n\n// All Images needs to be replaced with a loading icon incase images aren't loaded from the server yet\nclass Featured extends Component {\n    // selectValues is for the initial values of the select menus\n    // updated is for used to prevent the component from rerendering by changing it to true in componenetDidUpdate after\n    // it sets the state once.\n\n    state = {\n        selectValues: {},\n        updated: false\n    };\n\n    // Create 10 options for the product quantity\n    returnSelectElements() {\n        const index = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n        const options = index.map(num => (\n            <option value={num} key={num}>\n                {num}\n            </option>\n        ));\n        return options;\n    }\n\n    // We are using this to force the Component to update so we could get initial values for our select element.\n    // The reason we didn't need to do that in <Products/> is because it's being passed in a switch as a route and \n    // the default behavior for that is it will make the componenet remound and reupdate\n    componentDidMount() {\n        if (!this.state.updated && this.props.featuredProducts.length > 0) {\n            this.setSelectValues();\n            this.setState({ updated: true });\n        }\n    }\n\n\n    //call the setSelectValues then change the updated to true to prevent rerendering to prevent the\n    // MaximumDepthExceeded error.\n    componentDidUpdate() {\n        if (!this.state.updated && this.props.featuredProducts.length > 0) {\n            this.setSelectValues();\n            this.setState({ updated: true });\n        }\n    }\n\n    // assign initial values for select menu\n    setSelectValues = () => {\n        let selectValues = { ...this.state.selectValues };\n        this.props.featuredProducts.forEach(product => {\n            selectValues[product.product_id] = 1;\n        });\n        this.setState({ selectValues });\n    };\n\n    // Update the quantity of the current product in the state\n    handleQuantityChange = (id, quantity) => {\n        let selectValues = { ...this.state.selectValues };\n        selectValues[id] = parseInt(quantity);\n        this.setState({ selectValues });\n    };\n\n    render() {\n\n        return (\n            <div className=\"featured-products\">\n                {this.props.featuredProducts.map(product => (\n                    <div key={product.product_id}>\n                        <Link to={{ pathname: \"/home/productdetails\", state: { product, title: product.product_id } }}>\n                            <img src={product.imgUrl} alt={product.title} className=\"featured-show\" />\n                        </Link>\n                        <div className=\"price-add\">\n                            <span>\n                                <em>Price:{product.price}$</em>\n                            </span>\n                            <span>\n                                <select onChange={event => { this.handleQuantityChange(product.product_id, event.currentTarget.value) }}>\n                                    {this.returnSelectElements()}\n                                </select>\n                            </span>\n                            <button\n                                className=\"add-to-cart-button\"\n                                onClick={() => { CONTROLLERS.handleAddToCart(product, this.state.selectValues[product.product_id]) }}>Add to Cart\n                                <FontAwesomeIcon className=\"add-to-cart-icon\" icon={faShoppingCart}\n                                    onClick={() => CONTROLLERS.handleAddToCart(product, this.state.selectValues[product.product_id])} />\n                            </button>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default Featured;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Footer extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"footer\">\n                    <p>\n                        Copyright &#169; <em>Hossam Mohamed</em>. All rights reserved.\n                    </p>\n                    <span>\n                        <Link to=\"#\">Privacy Policy |</Link>\n                        <Link to=\"#\">Terms of Use |</Link>\n                        <Link to=\"#\">Contact us </Link>\n                    </span>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Footer;\n","import React from \"react\";\n\n\n\nconst passwordValidation = (firstPassword, secondPassword) => {\n    const numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const specialCharacters = \"/^!@#$%\\^&*)(+=._-]*$/?\";\n    const hasEnoughLength = (firstPassword.length >= 8);\n    const match = (firstPassword === secondPassword);\n    let containsUppercase = false;\n    let containsNumbers = false;\n    let containsSpecials = false;\n\n    // Convert the password to an array then apply validations\n    firstPassword.split(\"\").forEach((letter) => {\n\n        // Check uppercase\n        if (letter === letter.toUpperCase()) {\n            containsUppercase = true;\n        }\n        // Check numbers\n        if (numbers.includes(parseInt(letter))) {\n            containsNumbers = true;\n        }\n        // Check specials\n        if (specialCharacters.split(\"\").includes(letter)) {\n            containsSpecials = true;\n        }\n    })\n    const allValid = hasEnoughLength && match && containsUppercase && containsNumbers && containsSpecials;\n    return [match, hasEnoughLength, containsUppercase, containsNumbers, containsSpecials, allValid]\n}\n\n\n\nconst returnValidationItems = ({\n    password,\n    confirmPassword,\n    passwordContainsUpperCase,\n    passwordContainsSpecials,\n    passwordHasEnoughLength,\n    passwordContainsNumbers,\n    passwordsMatch,\n    email,\n    confirmEmail,\n    emailsMatch,\n    usernameValid,\n    firstName,\n    lastName\n}) => {\n    let passwordMessages = []\n    let emailMessages = []\n    if (!password || !confirmPassword) {\n        passwordMessages = [<p>Password is required.</p>];\n    } else {\n        if (!passwordContainsUpperCase) {\n            passwordMessages.push(<p>Password must contain at least one uppercase character.</p>);\n        }\n        if (!passwordContainsSpecials) {\n            passwordMessages.push(<p>Password must contain at least one special character.</p>);\n        }\n        if (!passwordHasEnoughLength) {\n            passwordMessages.push(<p> Password must be at least 8 characters.</p>);\n        }\n        if (!passwordContainsNumbers) {\n            passwordMessages.push(<p>Password must contain at least one number.</p>);\n        }\n        if (!passwordsMatch) {\n            passwordMessages.push(<p>Passwords don't match.</p>);\n        }\n    }\n    if (!email || !confirmEmail) {\n        emailMessages = [<p>Email is required.</p>];\n    } else {\n        if (!emailsMatch) {\n            emailMessages.push(<p>Emails don't match.</p>);\n        }\n        if (!confirmEmail) {\n            emailMessages.push(<p>Confirm Email is required.</p>);\n        }\n        if (!email) {\n            emailMessages.push(<p>Email is required.</p>);\n        }\n    }\n\n    return <React.Fragment>\n        <div className=\"validation-errors\" ref=\"usernameValidation\" style={{ display: \"none\", backgroundColor: \"#120b12\" }}>\n            {usernameValid ? \"\" : <p>Username is taken, please try a differenct one.</p>}\n        </div>\n        <div className=\"validation-errors\" ref=\"validation\" style={{ display: \"none\", backgroundColor: \"#120b12\" }}>\n            {firstName ? \"\" : <p>First name is required.</p>}\n            {lastName ? \"\" : <p>Last name is required.</p>}\n            {passwordMessages.map(msg => msg)}\n            {emailMessages.map(msg => msg)}\n        </div>\n    </React.Fragment>\n}\n\n\n\nconst paymentFieldValidation = (firstName, lastName, streetAddress, city, zip, email) => {\n    const validationResults = {}\n\n    firstName ? validationResults.firstName = true : validationResults.firstName = false;\n    lastName ? validationResults.lastName = true : validationResults.lastName = false;\n    streetAddress ? validationResults.streetAddress = true : validationResults.streetAddress = false;\n    city ? validationResults.city = true : validationResults.city = false;\n    /^\\d{5}$|^\\d{5}-\\d{4}$/.test(zip) ? validationResults.zipCode = true : validationResults.zipCode = false;\n    /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email) ? validationResults.email = true : validationResults.email = false;\n    const allValid = validationResults.firstName &&\n                                validationResults.lastName &&\n                                validationResults.streetAddress &&\n                                validationResults.city &&\n                                validationResults.zipValid &&\n                                validationResults.emailValid;\n\n    return { allValid, validationResults }\n}\n\nexport { passwordValidation, returnValidationItems, paymentFieldValidation };","import React, { Component } from \"react\";\nimport Footer from \"../bottom-section/footer\";\nimport DjangoCSRFToken from \"django-react-csrftoken\";\nimport {passwordValidation, returnValidationItems} from \"../../services/validation\";\nimport Ajax from \"../../services/Ajax\";\nclass Register extends Component {\n    state = {\n        username: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        password: \"\",\n        emailCode: null,\n        validation: {\n            password : false,\n            confirmPassword:false,\n            usernameValid : false,\n            passwordsMatch: false,\n            passwordHasEnoughLength: false, \n            passwordContainsUpperCase: false,\n            passwordContainsNumbers: false,\n            passwordContainsSpecials: false,\n            emailsMatch: false,\n            firstName:false,\n            lastName:false,\n            email:false,\n            confirmEmail: false\n        }\n    };\n    // ***************Refs******************\n    codeForm = React.createRef();\n    code = React.createRef();\n    incorrectCode = React.createRef();\n    signUp = React.createRef();\n\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        this.refs.validation.style.display = \"none\";\n        this.refs.usernameValidation.style.display = \"none\";\n\n        // Will return a an array of booleans that reflects different password validations, refer to validation.js\n        const passwordValidationResult = passwordValidation(this.refs.password.value, this.refs.confirm_password.value)\n        const emailsMatch = (this.refs.email.value === this.refs.confirm_email.value)\n\n        // If there is anything wrong with the validation, we will show the validation div therefore see the errors.\n        if (!(passwordValidationResult[5] && emailsMatch && this.refs.email.value && this.refs.confirm_email.value)){\n            this.refs.validation.style.display = \"block\";\n        }\n        // If everything is valid, send the request.\n        if (passwordValidationResult[5] && emailsMatch && this.refs.first_name.value && this.refs.last_name.value && this.refs.email.value && this.refs.confirm_email.value){\n            \n            // Send a request to send the validation code to the email.\n            const response = await Ajax(/EmailCode/, \"POST\", JSON.stringify({email:this.state.email}))\n            response.json().then(data => this.setState({emailCode: String(data[0])}))\n            if (response.status === 200 ){\n                this.signUp.current.style.display = \"none\";\n                this.codeForm.current.style.display = \"block\";\n            } else {\n                alert(\"Something has went wrong sending the code.\");\n            }\n            //  We will set the state with all the values to get the validation error messages.\n        }else{\n            this.setState({validation:{\n                password: this.refs.password.value,\n                confirmPassword: this.refs.confirm_password.value,\n                firstName : this.refs.first_name.value,\n                lastName: this.refs.last_name.value,\n                email: this.refs.email.value,\n                confirmEmail: this.refs.confirm_email.value,\n                passwordsMatch:passwordValidationResult[0], \n                passwordHasEnoughLength:passwordValidationResult[1],\n                passwordContainsUpperCase:passwordValidationResult[2],\n                passwordContainsNumbers:passwordValidationResult[3],\n                passwordContainsSpecials:passwordValidationResult[4],\n                emailsMatch,\n            }})\n        }\n\n    };\n\n\n    handleCodeFormSubmit = async (event) => {\n        event.preventDefault();\n\n        // if the confirmation code matches then we will sign the user up\n        if (this.code.current.value === this.state.emailCode){\n            const response = await Ajax(/SignupAPI/,\"POST\", JSON.stringify({\n                username: this.state.username,\n                first_name: this.state.first_name,\n                last_name: this.state.last_name,\n                email: this.state.email,\n                password: this.state.password\n            }))\n                \n            if (response.status === 200) {\n                // Hide the validation errors and then\n                this.refs.usernameValidation.style.display = \"none\";\n                this.refs.validation.style.display = \"none\";\n                // Log user in\n                this.props.onUserLogin();\n                alert(`Thank you for signing up ${this.state.first_name}`)\n                this.props.history.replace(\"/\");\n            } else {\n                        this.refs.usernameValidation.style.display = \"block\";\n                        }\n        } else {\n            this.incorrectCode.current.style.display = \"block\";\n        }\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                {returnValidationItems(this.state.validation)}\n                <div ref = {this.signUp} className=\"sign-up\">\n                    <form onSubmit={this.handleSubmit}>\n                        <DjangoCSRFToken />\n                        <div className=\"first-last-input\">\n                            <input\n                                type=\"text\"\n                                placeholder=\"   First name\"\n                                ref=\"first_name\"\n                                name=\"first_name\"\n                                onChange={this.handleChange}\n                            />\n                            <input\n                                type=\"text\"\n                                placeholder=\"    Last name\"\n                                ref=\"last_name\"\n                                name=\"last_name\"\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                        <select className=\"country-select\" defaultValue=\"United States\">\n                            <option value=\"Afghanistan\">Afghanistan</option>\n                            <option value=\"Albania\">Albania</option>\n                            <option value=\"Algeria\">Algeria</option>\n                            <option value=\"American Samoa\">American Samoa</option>\n                            <option value=\"Andorra\">Andorra</option>\n                            <option value=\"Angola\">Angola</option>\n                            <option value=\"Anguilla\">Anguilla</option>\n                            <option value=\"Antartica\">Antarctica</option>\n                            <option value=\"Antigua and Barbuda\">Antigua and Barbuda</option>\n                            <option value=\"Argentina\">Argentina</option>\n                            <option value=\"Armenia\">Armenia</option>\n                            <option value=\"Aruba\">Aruba</option>\n                            <option value=\"Australia\">Australia</option>\n                            <option value=\"Austria\">Austria</option>\n                            <option value=\"Azerbaijan\">Azerbaijan</option>\n                            <option value=\"Bahamas\">Bahamas</option>\n                            <option value=\"Bahrain\">Bahrain</option>\n                            <option value=\"Bangladesh\">Bangladesh</option>\n                            <option value=\"Barbados\">Barbados</option>\n                            <option value=\"Belarus\">Belarus</option>\n                            <option value=\"Belgium\">Belgium</option>\n                            <option value=\"Belize\">Belize</option>\n                            <option value=\"Benin\">Benin</option>\n                            <option value=\"Bermuda\">Bermuda</option>\n                            <option value=\"Bhutan\">Bhutan</option>\n                            <option value=\"Bolivia\">Bolivia</option>\n                            <option value=\"Bosnia and Herzegowina\">Bosnia and Herzegowina</option>\n                            <option value=\"Botswana\">Botswana</option>\n                            <option value=\"Bouvet Island\">Bouvet Island</option>\n                            <option value=\"Brazil\">Brazil</option>\n                            <option value=\"British Indian Ocean Territory\">British Indian Ocean Territory</option>\n                            <option value=\"Brunei Darussalam\">Brunei Darussalam</option>\n                            <option value=\"Bulgaria\">Bulgaria</option>\n                            <option value=\"Burkina Faso\">Burkina Faso</option>\n                            <option value=\"Burundi\">Burundi</option>\n                            <option value=\"Cambodia\">Cambodia</option>\n                            <option value=\"Cameroon\">Cameroon</option>\n                            <option value=\"Canada\">Canada</option>\n                            <option value=\"Cape Verde\">Cape Verde</option>\n                            <option value=\"Cayman Islands\">Cayman Islands</option>\n                            <option value=\"Central African Republic\">Central African Republic</option>\n                            <option value=\"Chad\">Chad</option>\n                            <option value=\"Chile\">Chile</option>\n                            <option value=\"China\">China</option>\n                            <option value=\"Christmas Island\">Christmas Island</option>\n                            <option value=\"Cocos Islands\">Cocos (Keeling) Islands</option>\n                            <option value=\"Colombia\">Colombia</option>\n                            <option value=\"Comoros\">Comoros</option>\n                            <option value=\"Congo\">Congo</option>\n                            <option value=\"Congo\">Congo, the Democratic Republic of the</option>\n                            <option value=\"Cook Islands\">Cook Islands</option>\n                            <option value=\"Costa Rica\">Costa Rica</option>\n                            <option value=\"Cota D'Ivoire\">Cote d'Ivoire</option>\n                            <option value=\"Croatia\">Croatia (Hrvatska)</option>\n                            <option value=\"Cuba\">Cuba</option>\n                            <option value=\"Cyprus\">Cyprus</option>\n                            <option value=\"Czech Republic\">Czech Republic</option>\n                            <option value=\"Denmark\">Denmark</option>\n                            <option value=\"Djibouti\">Djibouti</option>\n                            <option value=\"Dominica\">Dominica</option>\n                            <option value=\"Dominican Republic\">Dominican Republic</option>\n                            <option value=\"East Timor\">East Timor</option>\n                            <option value=\"Ecuador\">Ecuador</option>\n                            <option value=\"Egypt\">Egypt</option>\n                            <option value=\"El Salvador\">El Salvador</option>\n                            <option value=\"Equatorial Guinea\">Equatorial Guinea</option>\n                            <option value=\"Eritrea\">Eritrea</option>\n                            <option value=\"Estonia\">Estonia</option>\n                            <option value=\"Ethiopia\">Ethiopia</option>\n                            <option value=\"Falkland Islands\">Falkland Islands (Malvinas)</option>\n                            <option value=\"Faroe Islands\">Faroe Islands</option>\n                            <option value=\"Fiji\">Fiji</option>\n                            <option value=\"Finland\">Finland</option>\n                            <option value=\"France\">France</option>\n                            <option value=\"France Metropolitan\">France, Metropolitan</option>\n                            <option value=\"French Guiana\">French Guiana</option>\n                            <option value=\"French Polynesia\">French Polynesia</option>\n                            <option value=\"French Southern Territories\">French Southern Territories</option>\n                            <option value=\"Gabon\">Gabon</option>\n                            <option value=\"Gambia\">Gambia</option>\n                            <option value=\"Georgia\">Georgia</option>\n                            <option value=\"Germany\">Germany</option>\n                            <option value=\"Ghana\">Ghana</option>\n                            <option value=\"Gibraltar\">Gibraltar</option>\n                            <option value=\"Greece\">Greece</option>\n                            <option value=\"Greenland\">Greenland</option>\n                            <option value=\"Grenada\">Grenada</option>\n                            <option value=\"Guadeloupe\">Guadeloupe</option>\n                            <option value=\"Guam\">Guam</option>\n                            <option value=\"Guatemala\">Guatemala</option>\n                            <option value=\"Guinea\">Guinea</option>\n                            <option value=\"Guinea-Bissau\">Guinea-Bissau</option>\n                            <option value=\"Guyana\">Guyana</option>\n                            <option value=\"Haiti\">Haiti</option>\n                            <option value=\"Heard and McDonald Islands\">Heard and Mc Donald Islands</option>\n                            <option value=\"Holy See\">Holy See (Vatican City State)</option>\n                            <option value=\"Honduras\">Honduras</option>\n                            <option value=\"Hong Kong\">Hong Kong</option>\n                            <option value=\"Hungary\">Hungary</option>\n                            <option value=\"Iceland\">Iceland</option>\n                            <option value=\"India\">India</option>\n                            <option value=\"Indonesia\">Indonesia</option>\n                            <option value=\"Iran\">Iran (Islamic Republic of)</option>\n                            <option value=\"Iraq\">Iraq</option>\n                            <option value=\"Ireland\">Ireland</option>\n                            <option value=\"Israel\">Israel</option>\n                            <option value=\"Italy\">Italy</option>\n                            <option value=\"Jamaica\">Jamaica</option>\n                            <option value=\"Japan\">Japan</option>\n                            <option value=\"Jordan\">Jordan</option>\n                            <option value=\"Kazakhstan\">Kazakhstan</option>\n                            <option value=\"Kenya\">Kenya</option>\n                            <option value=\"Kiribati\">Kiribati</option>\n                            <option value=\"Democratic People's Republic of Korea\">Korea, Democratic People's Republic of</option>\n                            <option value=\"Korea\">Korea, Republic of</option>\n                            <option value=\"Kuwait\">Kuwait</option>\n                            <option value=\"Kyrgyzstan\">Kyrgyzstan</option>\n                            <option value=\"Lao\">Lao People's Democratic Republic</option>\n                            <option value=\"Latvia\">Latvia</option>\n                            <option value=\"Lebanon\">Lebanon</option>\n                            <option value=\"Lesotho\">Lesotho</option>\n                            <option value=\"Liberia\">Liberia</option>\n                            <option value=\"Libyan Arab Jamahiriya\">Libyan Arab Jamahiriya</option>\n                            <option value=\"Liechtenstein\">Liechtenstein</option>\n                            <option value=\"Lithuania\">Lithuania</option>\n                            <option value=\"Luxembourg\">Luxembourg</option>\n                            <option value=\"Macau\">Macau</option>\n                            <option value=\"Macedonia\">Macedonia, The Former Yugoslav Republic of</option>\n                            <option value=\"Madagascar\">Madagascar</option>\n                            <option value=\"Malawi\">Malawi</option>\n                            <option value=\"Malaysia\">Malaysia</option>\n                            <option value=\"Maldives\">Maldives</option>\n                            <option value=\"Mali\">Mali</option>\n                            <option value=\"Malta\">Malta</option>\n                            <option value=\"Marshall Islands\">Marshall Islands</option>\n                            <option value=\"Martinique\">Martinique</option>\n                            <option value=\"Mauritania\">Mauritania</option>\n                            <option value=\"Mauritius\">Mauritius</option>\n                            <option value=\"Mayotte\">Mayotte</option>\n                            <option value=\"Mexico\">Mexico</option>\n                            <option value=\"Micronesia\">Micronesia, Federated States of</option>\n                            <option value=\"Moldova\">Moldova, Republic of</option>\n                            <option value=\"Monaco\">Monaco</option>\n                            <option value=\"Mongolia\">Mongolia</option>\n                            <option value=\"Montserrat\">Montserrat</option>\n                            <option value=\"Morocco\">Morocco</option>\n                            <option value=\"Mozambique\">Mozambique</option>\n                            <option value=\"Myanmar\">Myanmar</option>\n                            <option value=\"Namibia\">Namibia</option>\n                            <option value=\"Nauru\">Nauru</option>\n                            <option value=\"Nepal\">Nepal</option>\n                            <option value=\"Netherlands\">Netherlands</option>\n                            <option value=\"Netherlands Antilles\">Netherlands Antilles</option>\n                            <option value=\"New Caledonia\">New Caledonia</option>\n                            <option value=\"New Zealand\">New Zealand</option>\n                            <option value=\"Nicaragua\">Nicaragua</option>\n                            <option value=\"Niger\">Niger</option>\n                            <option value=\"Nigeria\">Nigeria</option>\n                            <option value=\"Niue\">Niue</option>\n                            <option value=\"Norfolk Island\">Norfolk Island</option>\n                            <option value=\"Northern Mariana Islands\">Northern Mariana Islands</option>\n                            <option value=\"Norway\">Norway</option>\n                            <option value=\"Oman\">Oman</option>\n                            <option value=\"Pakistan\">Pakistan</option>\n                            <option value=\"Palau\">Palau</option>\n                            <option value=\"Panama\">Panama</option>\n                            <option value=\"Papua New Guinea\">Papua New Guinea</option>\n                            <option value=\"Paraguay\">Paraguay</option>\n                            <option value=\"Peru\">Peru</option>\n                            <option value=\"Philippines\">Philippines</option>\n                            <option value=\"Pitcairn\">Pitcairn</option>\n                            <option value=\"Poland\">Poland</option>\n                            <option value=\"Portugal\">Portugal</option>\n                            <option value=\"Puerto Rico\">Puerto Rico</option>\n                            <option value=\"Qatar\">Qatar</option>\n                            <option value=\"Reunion\">Reunion</option>\n                            <option value=\"Romania\">Romania</option>\n                            <option value=\"Russia\">Russian Federation</option>\n                            <option value=\"Rwanda\">Rwanda</option>\n                            <option value=\"Saint Kitts and Nevis\">Saint Kitts and Nevis</option>\n                            <option value=\"Saint LUCIA\">Saint LUCIA</option>\n                            <option value=\"Saint Vincent\">Saint Vincent and the Grenadines</option>\n                            <option value=\"Samoa\">Samoa</option>\n                            <option value=\"San Marino\">San Marino</option>\n                            <option value=\"Sao Tome and Principe\">Sao Tome and Principe</option>\n                            <option value=\"Saudi Arabia\">Saudi Arabia</option>\n                            <option value=\"Senegal\">Senegal</option>\n                            <option value=\"Seychelles\">Seychelles</option>\n                            <option value=\"Sierra\">Sierra Leone</option>\n                            <option value=\"Singapore\">Singapore</option>\n                            <option value=\"Slovakia\">Slovakia (Slovak Republic)</option>\n                            <option value=\"Slovenia\">Slovenia</option>\n                            <option value=\"Solomon Islands\">Solomon Islands</option>\n                            <option value=\"Somalia\">Somalia</option>\n                            <option value=\"South Africa\">South Africa</option>\n                            <option value=\"South Georgia\">South Georgia and the South Sandwich Islands</option>\n                            <option value=\"Span\">Spain</option>\n                            <option value=\"SriLanka\">Sri Lanka</option>\n                            <option value=\"St. Helena\">St. Helena</option>\n                            <option value=\"St. Pierre and Miguelon\">St. Pierre and Miquelon</option>\n                            <option value=\"Sudan\">Sudan</option>\n                            <option value=\"Suriname\">Suriname</option>\n                            <option value=\"Svalbard\">Svalbard and Jan Mayen Islands</option>\n                            <option value=\"Swaziland\">Swaziland</option>\n                            <option value=\"Sweden\">Sweden</option>\n                            <option value=\"Switzerland\">Switzerland</option>\n                            <option value=\"Syria\">Syrian Arab Republic</option>\n                            <option value=\"Taiwan\">Taiwan, Province of China</option>\n                            <option value=\"Tajikistan\">Tajikistan</option>\n                            <option value=\"Tanzania\">Tanzania, United Republic of</option>\n                            <option value=\"Thailand\">Thailand</option>\n                            <option value=\"Togo\">Togo</option>\n                            <option value=\"Tokelau\">Tokelau</option>\n                            <option value=\"Tonga\">Tonga</option>\n                            <option value=\"Trinidad and Tobago\">Trinidad and Tobago</option>\n                            <option value=\"Tunisia\">Tunisia</option>\n                            <option value=\"Turkey\">Turkey</option>\n                            <option value=\"Turkmenistan\">Turkmenistan</option>\n                            <option value=\"Turks and Caicos\">Turks and Caicos Islands</option>\n                            <option value=\"Tuvalu\">Tuvalu</option>\n                            <option value=\"Uganda\">Uganda</option>\n                            <option value=\"Ukraine\">Ukraine</option>\n                            <option value=\"United Arab Emirates\">United Arab Emirates</option>\n                            <option value=\"United Kingdom\">United Kingdom</option>\n                            <option value=\"United States\">United States</option>\n                            <option value=\"United States Minor Outlying Islands\">United States Minor Outlying Islands</option>\n                            <option value=\"Uruguay\">Uruguay</option>\n                            <option value=\"Uzbekistan\">Uzbekistan</option>\n                            <option value=\"Vanuatu\">Vanuatu</option>\n                            <option value=\"Venezuela\">Venezuela</option>\n                            <option value=\"Vietnam\">Viet Nam</option>\n                            <option value=\"Virgin Islands (British)\">Virgin Islands (British)</option>\n                            <option value=\"Virgin Islands (U.S)\">Virgin Islands (U.S.)</option>\n                            <option value=\"Wallis and Futana Islands\">Wallis and Futuna Islands</option>\n                            <option value=\"Western Sahara\">Western Sahara</option>\n                            <option value=\"Yemen\">Yemen</option>\n                            <option value=\"Yugoslavia\">Yugoslavia</option>\n                            <option value=\"Zambia\">Zambia</option>\n                            <option value=\"Zimbabwe\">Zimbabwe</option>\n                        </select>\n                        <input\n                            type=\"text\"\n                            placeholder=\"    Username\"\n                            ref=\"username\"\n                            className=\"input\"\n                            name=\"username\"\n                            onChange={this.handleChange}\n                        />\n                        <input\n                            type=\"password\"\n                            placeholder=\"    Password\"\n                            className=\"input\"\n                            ref=\"password\"\n                            name=\"password\"\n                            onChange={this.handleChange}\n                        />\n\n                        <input\n                            type=\"password\"\n                            placeholder=\"    Confirm password\"\n                            className=\"input\"\n                            ref=\"confirm_password\"\n                            name=\"confirm_password\"\n                            onChange={this.handleChange}\n                        />\n\n                        <input\n                            type=\"text\"\n                            placeholder=\"    E-mail\"\n                            className=\"input\"\n                            ref=\"email\"\n                            name=\"email\"\n                            onChange={this.handleChange}\n                        />\n\n                        <input\n                            type=\"text\"\n                            placeholder=\"    Confirm e-mail\"\n                            name=\"confirm_email\"\n                            ref=\"confirm_email\"\n                            className=\"input\"\n                        />\n\n                        <button type=\"submit\" className=\"sign-up-input\">Sign Up</button>\n                    </form>\n                </div>\n                <div>\n                <div className=\"password-reset\">\n                    <form ref = {this.codeForm} onSubmit = {this.handleCodeFormSubmit} style={{display:\"none\"}}>\n                        <p ref={this.incorrectCode} style={{display:\"none\", color:\"#bf0000d6\"}}>The code provided does not match.</p>\n                        <input ref = {this.code} placeholder=\"Verification code\" className = \"input\" />\n                        <button  className = \"sign-up-input\"  style = {{display:\"block\"}}>Confirm code.</button>\n                    </form>\n                    </div>\n                </div>\n\n                <Footer />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Register;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Footer from \"../bottom-section/footer\";\nimport DjangoCSRFToken from \"django-react-csrftoken\";\nimport Cookies from 'js-cookie'\n\n\nclass Login extends Component {\n    state = {\n        username: \"\",\n        password: \"\"\n    };\n\n\n\n    csrftoken = Cookies.get('csrftoken');\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        fetch(\"/LoginAPI/\", {\n            headers: { \"Content-Type\": \"application/json\", 'X-CSRFToken': this.csrfToken },\n            // headers: { \"Content-Type\": \"application/json\" },\n            credentials: \"include\",\n            mode: \"same-origin\",\n            method: \"POST\",\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password\n            })\n        }).then(async (response) => {\n\n            await response.json().then(data =>{\n                if (data === \"allow\"){\n\n\n                    // Set logged in in the index state to true.\n                    this.props.onUserLogin();\n\n                    // redirect.\n                    this.props.history.replace(\"/\");\n                }else{\n                    this.refs.validation.style.display = \"block\"\n                }\n            } )\n        })\n\n    };\n\n    // update username and password value to the state\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <div  className = \"validation-errors\" ref=\"validation\" style={{display:\"none\", backgroundColor:\"#120b12\"}}>\n                    <p>Your login information are incorrect.</p>\n                </div>\n                <div className=\"sign-in\">\n                    <form onSubmit={this.handleSubmit}>\n                        <DjangoCSRFToken />\n                        <input\n                            type=\"text\"\n                            className=\"input\"\n                            ref=\"username\"\n                            name=\"username\"\n                            placeholder=\"    Username\"\n                            onChange={this.handleChange}\n                        />\n                        <input\n                            type=\"password\"\n                            className=\"input\"\n                            ref=\"password\"\n                            name=\"password\"\n                            placeholder=\"    Password\"\n                            onChange={this.handleChange}\n                        />\n                        <button type=\"submit\" className=\"sign-up-input\">Login</button>\n                        <div className = \"forgot-password-button\">\n                            <Link to=\"/home/reset-password\">Forgot password?</Link>\n                        </div>\n                    </form>\n                </div>\n                <Footer />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Login;\n","import React, {Component} from 'react';\nimport {\n    CardElement,\n    injectStripe,\n    CardNumberElement,\n    CardExpiryElement,\n    CardCvcElement\n} from 'react-stripe-elements';\nimport Cookies from 'js-cookie'\nimport {paymentFieldValidation} from '../../services/validation';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {  faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\n\nclass CheckoutForm extends Component {\n\n    state = {complete: false};\n    firstName = React.createRef();\n    lastName = React.createRef();\n    streetAddress = React.createRef();\n    city = React.createRef();\n    zipCode = React.createRef();\n    email = React.createRef();\n\n\n    submit = async (event) => {\n        event.preventDefault();\n        const validation = paymentFieldValidation(\n                                        this.firstName.current.value,\n                                        this.lastName.current.value,\n                                        this.streetAddress.current.value,\n                                        this.city.current.value,\n                                        this.zipCode.current.value,\n                                        this.email.current.value\n                                        )\n\n    if(validation.allValid){\n        const csrftoken = Cookies.get('csrftoken');\n        let {token} = await this.props.stripe.createToken({name: \"Name\"});\n        let response = await fetch(\"/PaymentProcess/\", {\n        headers: { \"Content-Type\": \"application/json\",'X-CSRFToken':csrftoken, \"Accept\": \"application/json\"},\n        method: \"POST\",\n        body: JSON.stringify({token:token.id, amount:this.props.total, email:this.email.current.value})\n        });\n    \n        // if (response.ok){response.json().then(data =>console.log(data))}\n    } else {\n        Object.entries(validation.validationResults).forEach(entry => {\n            const key = entry[0];\n            const value = entry[1];\n            value ? this[key].current.style.border = \"1px solid #be9b64\": this[key].current.style.border = \".5px solid red\";\n        })\n    }\n    }\n\n    render() {\n        return (\n        <form className=\"checkout\">\n            <FontAwesomeIcon\n                className=\"search-exit\"\n                icon={faTimes}\n                onClick={this.props.handleClose}\n                style = {{marginLeft:\"auto\"}}\n            />\n            <input type=\"text\" className = \"StripeElement\" placeholder=\"      First Name:\" ref={this.firstName}/>\n            <input type=\"text\" className = \"StripeElement\" placeholder=\"      Last Name:\" ref={this.lastName}/>\n            <input type=\"text\" className = \"StripeElement\" placeholder=\"      Street Address:\" ref={this.streetAddress}/>\n            <input type=\"text\" className = \"StripeElement\" placeholder=\"      City:\" ref={this.city}/>\n            <input type=\"text\" className = \"StripeElement\" placeholder=\"      Zipcode:\" ref={this.zipCode}/>\n            <input type=\"text\" className = \"StripeElement\" placeholder=\"      Email:\" ref={this.email}/>\n            <CardNumberElement \n            style={{base: {\n                fontSize: '12px',\n                backgroundColor:\"rgb(18, 11, 18)\",\n                textAlign:\"center\",\n                marginTop:\"5px\",\n                fontFamily:\"-apple-system,BlinkMacSystemFont,sans-serif\",\n                color:\"#be9b64\"\n                }}}/>\n            <CardExpiryElement style={{base: {\n                fontSize: '12px',\n                backgroundColor:\"rgb(18, 11, 18)\",\n                textAlign:\"center\",\n                marginTop:\"5px\",\n                fontFamily:\"-apple-system,BlinkMacSystemFont,sans-serif\",\n                color:\"#be9b64\"\n                }}}/>\n            <CardCvcElement style={{base: {\n                fontSize: '12px',\n                backgroundColor:\"rgb(18, 11, 18)\",\n                textAlign:\"center\",\n                marginTop:\"5px\",\n                fontFamily:\"-apple-system,BlinkMacSystemFont,sans-serif\",\n                color:\"#be9b64\"\n                }}}/>\n            <input \n                type=\"submit\"\n                className = \"StripeElement\"\n                onClick={this.submit}\n                placeholder=\"submit\"\n                style = {{\n                    width: \"50%\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\"\n                }}\n                />\n        </form>\n        );\n    }\n}\n\nexport default injectStripe(CheckoutForm);","import React, { Component } from \"react\";\nimport Footer from \"../bottom-section/footer\";\nimport { Link } from \"react-router-dom\";\nimport {Elements, StripeProvider} from 'react-stripe-elements';\nimport CheckoutForm from '../middle-section/checkout-form';\n\nclass Cart extends Component {\n\n\n    checkoutContainer = React.createRef();\n    // Make a select element with options\n    returnOptionElements = (quantity, id, product) => {\n        let optionElements = [];\n        for (let i = 1; i <= 10; i++) {\n            if (i !== 10) {\n                let element = <option key={i}>{i}</option>;\n                optionElements.push(element);\n            } else {\n                let element = <option key={i}>{i}</option>;\n                optionElements.push(element);\n                return (\n                    // Default value is equals to selected on one of the elements in regular HTML5 but it's placed in the select element.\n                    <select id={id} defaultValue={quantity} onChange={(event) =>this.handleSelectChange(product, event.currentTarget.value)} >\n                        {optionElements}\n                    </select>\n                );\n            }\n        }\n    };\n\n    handleSelectChange = (product, quantity) => {\n        product.quantity = parseInt(quantity) \n        this.props.onQuantityUpdate(product);\n    };\n\n    returnCartTotal = () => {\n        let total = 0;\n        const cartProducts = this.props.cartProducts;\n        for (let product of cartProducts) {\n            total += product.quantity * parseInt(product.price);\n        }\n        return total;\n    };\n    handleCheckoutClick = () => {\n        this.checkoutContainer.current.style.display = \"block\";\n    }\n\n    handleClose = () => {\n        this.checkoutContainer.current.style.display = \"none\";\n    }\n\n    render() {\n        if (this.props.cartProducts.length > 0) {\n            return (\n                <React.Fragment>\n                    <div className=\"products-list-section\">\n\n                        {this.props.cartProducts.map(product => (\n                            <div key={product.product_id}>\n                                <Link to={{\n                                    pathname: \"/home/productdetails\", state: { product, title: product.product_id }\n                                }}>\n                                    <img src={product.imgUrl} alt={product.title} className=\"featured-show\" />\n                                </Link>\n                                <div className=\"price-add\">\n                                    <span>\n                                        <em>Price:{product.price}$</em>\n                                    </span>\n                                    <span>\n                                        <em>Quantity: </em>\n                                        {this.returnOptionElements(product.quantity, product.product_id, product)}\n                                    </span>\n                                    <button className = \"delete_btn\" onClick = {() => this.props.onProductRemove(product.product_id)}>Remove</button>\n                                </div>\n                            </div>\n                        ))}\n                    <div className=\"total\">Subtotal: {this.returnCartTotal()}$ \n                        <button onClick={this.handleCheckoutClick} className=\"checkout-button\">Check-out</button>\n                    </div>\n                    </div>\n                    <StripeProvider apiKey=\"pk_live_FpgQMGTteK1NU6HlsuEJpkEG00o76EGZqd\">\n                        <div ref={this.checkoutContainer}  className=\"checkout-container\">\n                        <Elements>\n                            <CheckoutForm  handleClose = {this.handleClose} total = {this.returnCartTotal}/>\n                        </Elements>\n                        </div>\n                    </StripeProvider>\n                    <Footer />\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <div className=\"products-list-section\">\n                        <h1 style={{ height: \"100%\", textAlign:\"center\", width:\"100%\" }}>Your cart is empty !</h1>\n                    </div>\n                    <Footer />\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nexport default Cart;","import React, { Component } from \"react\";\nimport Footer from \"./../bottom-section/footer\";\n\nclass ContactUs extends Component {\n    handleSubmit = event => {\n        event.preventDefault();\n    };\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"contact-us\" onSubmit={this.handleSubmit}>\n                    <form id=\"contact-us-form\">\n                        <div>\n                            <input className=\"input\" placeholder=\"    First name\" />\n                            <input className=\"input\" placeholder=\"    Last name\" />\n                        </div>\n                        <div>\n                            <input className=\"input\" placeholder=\"    Phone\" />\n                            <input className=\"input\" placeholder=\"    E-mail\" />\n                        </div>\n                        <div>\n                            <textarea\n                                className=\"input\"\n                                placeholder=\"    Message....\"\n                                form=\"contact-us-form\"\n                                rows=\"10\"\n                                cols=\"45\"\n                            />\n                        </div>\n                        <button type=\"submit\">Send</button>\n                    </form>\n                </div>\n                <Footer />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ContactUs;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faArrowAltCircleRight,\n    faArrowAltCircleLeft\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\n// All Images needs to be replaced with a loading icon incase images aren't loaded from the server yet\n\nclass NewArrivals extends Component {\n    counter = 0;\n\n    componentDidMount() {\n        if (!this.props.loading) {\n        if (this.refs.newarrivals.childNodes.length > 0 ){\n            this.refs.newarrivals.childNodes[0].childNodes[0].className = \"show\"\n        }\n    }\n}\n\n    componentDidUpdate() {\n        if (!this.props.loading) {\n        const length = this.refs.newarrivals.childNodes.length;\n        for (let index = 1; index < length; index++) {\n            this.refs.newarrivals.childNodes[index].firstChild.className = \"hide\";\n        }\n        this.refs.newarrivals.childNodes[this.counter].firstChild.className = \"show\";\n        }\n    }\n\n    getSlideImages = () => {\n        let newArrivals = this.props.products.filter(\n            product => product.newarrival === true\n        );\n        const imgs = newArrivals.map(product => (\n            <Link to={{ pathname: \"/home/productdetails\", state: { product, title: product.product_id } }}\n                key={product.product_id}\n                id={product.product_id}>\n                <img src={product.imgUrl} alt={product.title} className=\"hide\" />\n            </Link>\n        ));\n        return imgs;\n    };\n\n    handleNextClick = () => {\n        const length = this.refs.newarrivals.childNodes.length;\n        if (this.counter < length - 1) this.counter++;\n        else this.counter = 0;\n        for (let index = 0; index < length; index++) {\n            this.refs.newarrivals.childNodes[index].firstChild.className = \"hide\";\n        }\n        this.refs.newarrivals.childNodes[this.counter].firstChild.className = \"show\";\n    };\n\n    handlePrevClick = () => {\n        const length = this.refs.newarrivals.childNodes.length;\n        if (this.counter === 0) this.counter = length - 1;\n        else this.counter--;\n        for (let index = 0; index < length; index++) {\n            this.refs.newarrivals.childNodes[index].firstChild.className = \"hide\";\n        }\n        this.refs.newarrivals.childNodes[this.counter].firstChild.className = \"show\";\n    };\n\n    render() {\n        if (this.props.loading) {\n            return <h1>Loading....</h1>;\n        } else {\n            return (\n                <React.Fragment>\n                    <div className=\"new-arrivals-container\">\n                        <FontAwesomeIcon\n                            className=\"prev-arrow\"\n                            icon={faArrowAltCircleLeft}\n                            onClick={() => this.handlePrevClick()}\n                        />\n                        <div className=\"newarrivals-images-div\" ref=\"newarrivals\">\n                            {this.getSlideImages()}\n                        </div>\n                        <FontAwesomeIcon\n                            className=\"next-arrow\"\n                            icon={faArrowAltCircleRight}\n                            onClick={() => this.handleNextClick()}\n                        />\n                    </div>\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nexport default NewArrivals;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\nimport Footer from \"./../bottom-section/footer\";\n\nclass Products extends Component {\n    state = {\n        selectedProducts: [],\n        selectValues: {},\n        updated: false\n    };\n\n\n    componentDidMount() {\n        let selectedProducts = [...this.state.selectedProducts];\n        selectedProducts = this.props.products.filter(\n            product => product.category === this.props.selectedCategory\n        );\n        this.setState({ selectedProducts });\n        if (this.state.updated === false) {\n            this.setSelectValues();\n            this.setState({ updated: true });\n        }\n    }\n\n    // Create 10 options for the product quantity\n    returnSelectElements() {\n        const index = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n        const options = index.map(num => (\n            <option value={num} key={num}>\n                {num}\n            </option>\n        ));\n        return options;\n    }\n\n    // assign initial values for select menu\n    setSelectValues = () => {\n        let selectValues = { ...this.state.selectValues };\n        this.props.products.forEach(product => {\n            selectValues[product.product_id] = 1;\n        });\n        this.setState({ selectValues });\n    };\n\n    // Update the quantity of the current product in the state\n    handleQuantityChange = (id, quantity) => {\n        let selectValues = { ...this.state.selectValues };\n        selectValues[id] = parseInt(quantity);\n        this.setState({ selectValues });\n    };\n\n    handleCategoryClick = selectedCategory => {\n        let selectedProducts = [...this.state.selectedProducts];\n        selectedProducts = this.props.products.filter(\n            product => product.category === selectedCategory\n        );\n        this.props.onCategoryChange(selectedCategory);\n        this.setState({ selectedProducts });\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"products-main\">\n                    <div className=\"products-category-selection-menu\">\n                        <button\n                            className=\"category-link\"\n                            onClick={() => this.handleCategoryClick(\"coats\")}>Coats\n                        </button>\n                        <button\n                            className=\"category-link-two\"\n                            onClick={() => this.handleCategoryClick(\"shoes\")}>Shoes\n                    </button>\n                    </div>\n                    <div className=\"products-list-section\">\n                        {this.state.selectedProducts.map(product => (\n                            <div key={product.product_id}>\n                                <Link to={{ pathname: \"/home/productdetails\", state: { product, title: product.producct_id }}}>\n                                    <img src={product.imgUrl} alt={product.title} className=\"featured-show\" />\n                                </Link>\n                                <div className=\"price-add\">\n                                    <span>\n                                        <em>Price:{product.price}$</em>\n                                    </span>\n                                    <span>\n                                        <select onChange={event => { this.handleQuantityChange(product.product_id, event.currentTarget.value); }}>{this.returnSelectElements()}</select>\n                                    </span>\n                                    <button className=\"add-to-cart-button\" onClick={() => this.props.onAddToCart(product, this.state.selectValues[product.product_id])}\n                                    >Add to Cart\n                                    <FontAwesomeIcon\n                                            className=\"add-to-cart-icon\"\n                                            icon={faShoppingCart}\n                                            onClick={() => this.props.onAddToCart(product, this.state.selectValues[product.product_id])} />\n                                    </button>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <Footer />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Products;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\n\nclass ProductDetails extends Component {\n\n\n    state = { selectValues: 0, updated: false };\n\n\n    product = this.props.location.state.product\n\n\n    //call the setSelectValues then change the updated to true to prevent rerendering to prevent the\n    // MaximumDepthExceeded error.\n    componentDidMount() {\n        if (!this.state.updated && this.product) {\n            this.setSelectValues();\n            this.setState({ updated: true });\n        }\n    }\n\n\n    // assign initial values for select menu\n    setSelectValues = () => {\n        let selectValues = { ...this.state.selectValues };\n        selectValues = 1;\n        this.setState({ selectValues });\n    };\n\n\n\n    // Update the quantity of the current product in the state\n    handleQuantityChange = (quantity) => {\n        let selectValues = { ...this.state.selectValues };\n        selectValues = parseInt(quantity);\n        this.setState({ selectValues });\n    };\n\n\n\n\n    // Create 10 options for the product quantity\n    returnSelectElements() {\n        const index = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n        const options = index.map(num => (<option value={num} key={num}>{num}</option>));\n        return options;\n    }\n\n    render() {\n        const product = this.props.location.state.product\n        // We can add a \"if \" statement to check if the product image url is returned or not\n        // if not we could just return a loading icon.\n\n\n        if (this.state.updated) {\n\n\n            return (\n                <React.Fragment>\n                    <div className=\"product-details\">\n\n                        <div>\n                            <h1>{product.title}</h1>\n                        </div>\n\n                        <div>\n                            <img src={product.imgUrl} alt={product.title} />\n                        </div>\n\n                        <div className=\"price-add\">\n                            <span><em>Price:{product.price}$</em></span>\n                            <select onChange={event => { this.handleQuantityChange(event.currentTarget.value); }}>\n                                {this.returnSelectElements()}\n                            </select>\n                            <button className=\"add-to-cart-button\"\n                                onClick={() => this.props.onAddToCart(product, this.state.selectValues)}>Add to Cart\n                                <FontAwesomeIcon className=\"add-to-cart-icon\" icon={faShoppingCart}\n                                    onClick={() => this.props.onAddToCart(product, this.state.selectValues)} />\n                            </button>\n                        </div>\n\n                    </div>\n                </React.Fragment >\n            );\n\n        } else {\n            return <h1>loading....</h1>\n        }\n\n    }\n}\n\nexport default ProductDetails;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nclass SearchResults extends Component {\n    searchedProducts = () => {\n        const { products, searchInput } = this.props;\n        let searchedProducts = products.filter(product =>\n            product.title.toLowerCase().includes(searchInput)\n        );\n        if (searchedProducts.length > 0) {\n            return (\n                <div className=\"products-list-section\" ref=\"productresult\">\n                    {searchedProducts.map(product => (\n                        <div key={product.product_id}>\n                            <Link to={{ pathname: \"/home/productdetails\", state: { product, title: product.product_id } }}>\n                                <img src={product.imgUrl} alt={product.title} className=\"featured-show\" />\n                            </Link>\n                            <div className=\"price-add\">\n                                <span>\n                                    <em>Price:{product.price}$</em>\n                                </span>\n                                <button\n                                    className=\"add-to-cart-button\"\n                                    onClick={() => this.props.onAddToCart(product)}>Add to Cart\n                                    <FontAwesomeIcon\n                                        className=\"add-to-cart-icon\"\n                                        icon={faShoppingCart}\n                                        onClick={() => this.props.onAddToCart(product)} />\n                                </button>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            );\n        } else {\n            return <h1>Product-Not-Found</h1>;\n        }\n    };\n\n    render() {\n        return <React.Fragment>{this.searchedProducts()}</React.Fragment>;\n    }\n}\n\nexport default SearchResults;\n","import React, { Component } from 'react';\nimport Ajax from \"../../services/Ajax\";\nimport { CONTROLLERS } from '../../services/handlers';\n\n\nclass PasswordReset extends Component {\n    state = { \n        email:\"\",\n        resetCode:\"\",\n        password:\"\",\n        confirmPassword:\"\"\n    }\n\n    // ***************Refs******************\n    emailForm = React.createRef();\n    emailNoExist = React.createRef();\n    emailAddress = React.createRef();\n    codeForm = React.createRef();\n    code = React.createRef();\n    newPasswordsForm = React.createRef();\n    firstPassword = React.createRef();\n    secondPassword = React.createRef();\n    incorrectCode = React.createRef();\n    sendCodeButton = React.createRef();\n    confirmCodeButton = React.createRef();\n    resetPasswordButton = React.createRef();\n\n    handleEmailFormSubmit = async (event) => {\n        event.preventDefault();\n        CONTROLLERS.disableButton(this.sendCodeButton);\n        const response = await Ajax(/SendEmail/, \"POST\", JSON.stringify({email:this.emailAddress.current.value}));\n        // Send a request to change verfication code in 30 minutes\n        Ajax(/SendEmail/, \"PUT\", JSON.stringify({email:this.emailAddress.current.value}));\n\n        if (response.status === 200){\n            this.emailForm.current.style.display = \"none\";\n            this.codeForm.current.style.display = \"block\";\n            this.setState({email:this.emailAddress.current.value})\n        }else{\n            this.emailNoExist.current.style.display = \"block\";\n        }\n    }\n\n\n    handleCodeConfirm = async (event) => {\n        event.preventDefault();\n        CONTROLLERS.disableButton(this.confirmCodeButton);\n        const response = await Ajax(/ConfirmCode/, \"POST\", JSON.stringify({email:this.emailAddress.current.value, reset_code:this.code.current.value}));\n        if (response.status === 200){\n            this.codeForm.current.style.display = \"none\";\n            this.newPasswordsForm.current.style.display = \"block\";\n            this.setState({resetCode:this.code.current.value})\n        }else{\n            this.incorrectCode.current.style.display = \"block\";\n        }\n    }\n\n    handlePasswordReset = async (event) => {\n        event.preventDefault();\n        CONTROLLERS.disableButton(this.resetPasswordButton);\n        const response = await Ajax(/ResetPassword/, \"POST\", JSON.stringify({\n            email:this.state.email, \n            password:this.state.password,\n            confirm_password:this.state.confirmPassword,\n            reset_code:this.state.resetCode\n        }));\n        if (response.status === 200){\n            this.codeForm.current.style.display = \"none\";\n            this.newPasswordsForm.current.style.display = \"block\";\n        }else{\n            response.json().then(data =>  alert(data))\n        }\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n\n    render() { \n        return ( <div className=\"password-reset\">\n            <form ref = {this.emailForm} onSubmit = {this.handleEmailFormSubmit}>\n                <p>Please provide an e-mail to send you a verification code.</p>\n                <p ref={this.emailNoExist} style={{display:\"none\", color:\"#bf0000d6\"}}>Email provided does not exist.</p>\n                <input ref = {this.emailAddress} placeholder=\"Email Address\" className = \"input\"/>\n                <button  ref = {this.sendCodeButton} className = \"sign-up-input\"  style = {{display:\"block\", fontSize:\"1.4vw\"}}>Send Code.</button>\n            </form>\n            <form ref = {this.codeForm} onSubmit = {this.handleCodeConfirm} style={{display:\"none\"}}>\n                <p ref={this.incorrectCode} style={{display:\"none\", color:\"#bf0000d6\"}}>The code provided does not match.</p>\n                <input ref = {this.code} placeholder=\"Verification code\"className = \"input\"/>\n                <button  ref = {this.confirmCodeButton}  className = \"sign-up-input\"  style = {{display:\"block\"}}>Confirm code.</button>\n            </form>\n            <form ref = {this.newPasswordsForm} style={{display:\"none\"}} onSubmit = {this.handlePasswordReset}>\n                <input ref = {this.firstPassword} type = \"password\" style = {{display:\"block\"}} placeholder = \"Password\" onChange = {this.handleChange} name = \"password\" className = \"input\"/>\n                <input ref = {this.secondPassword} type = \"password\" style = {{display:\"block\"}} placeholder = \"Confirm password\" onChange = {this.handleChange} name = \"confirmPassword\" className = \"input\"/>\n                <button ref = {this.resetPasswordButton} className = \"sign-up-input\"  style = {{display:\"block\"}}>Reset password</button>\n            </form>\n        </div>);\n    }\n}\n\nexport default PasswordReset;","import React, { Component } from \"react\";\nimport Nav from \"./top-section/nav\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Featured from \"./middle-section/featured\";\nimport Register from \"./top-section/register\";\nimport Login from \"./top-section/login\";\nimport Cart from \"./top-section/cart\";\nimport Footer from \"./bottom-section/footer\";\nimport ContactUs from \"./top-section/contact-us\";\nimport NewArrivals from \"./middle-section/new-arrivals\";\nimport Products from \"./middle-section/products\";\nimport ProductDetails from \"./product-details\";\nimport SearchResults from \"./middle-section/search-results\";\nimport Ajax from \"../services/Ajax\";\nimport PasswordReset from \"./middle-section/password-reset\";\nimport {CONTROLLERS} from \"../services/handlers\";\nexport const handler = {\n    indexThis(){return this},\n}\n\nclass Index extends Component {\n    state = {\n        featuredProducts: [],\n        cartProducts: [],\n        newArrivals: [],\n        products: [],\n        userAuthenticated: false,\n        searchInput: false,\n        menuOn: false,\n        loading: true,\n        selectedCategory: \"coats\",\n    };\n\n    mounted = false;\n    redirect = this.props.history.replace;\n    \n    componentDidMount() {\n\n        this.fetchAllProducts();\n        this.mounted = true;\n\n        window.returnTheThis = function() {\n            return this\n        }.bind(this)\n\n        handler.indexThis = handler.indexThis.bind(this)\n    }\n\n    componentWillUnmount() {\n        this.setState({loading:true, userAuthenticated:false})\n        this.mounted = false;\n    }\n\n    fetchAllProducts = async () => {\n        const response =  await Ajax(/DBProductsAPI/, \"GET\")\n        const data = await response.json();\n\n        if (response.status === 200 && data){\n            const  products =  JSON.parse(data[0]).map(product => product.fields)\n            this.setState({ products, loading: false, userAuthenticated:data[1] });\n        }\n\n        if (this.state.userAuthenticated){\n            const response = await  Ajax(/CartProducts/, \"GET\")\n            let cartProducts = await response.json();\n            \n            if (response.status === 200 && cartProducts){\n                cartProducts = JSON.parse(cartProducts).map(product => product.fields)\n                this.setState({ cartProducts, loading:false  });\n            }\n            // Else, get it from localStorage\n            }else{\n                const cartProducts = JSON.parse(localStorage.getItem(\"cart\"));\n                if(cartProducts) {\n                    this.setState({cartProducts, loading:false});\n                }\n            }\n\n    }\n\n    updateCartFromDB = async () => {\n        const response = await  Ajax(/CartProducts/, \"GET\")\n        let cartProducts = await response.json();\n\n        if (response.status === 200 && cartProducts){\n            cartProducts = JSON.parse(cartProducts).map(product => product.fields)\n            this.setState({ cartProducts, loading:false  });\n        }\n\n    }\n\n    menuOnAuthenticationItems = () => {\n        if (this.state.userAuthenticated) {\n            return <li className=\"sign-in-lin\" onClick = {CONTROLLERS.handleUserLogout}>Logout</li>\n        }else{\n            return (\n            <React.Fragment>\n                <li className=\"sign-in-lin\" onClick={() => CONTROLLERS.handleNavLinkClick(\"/home/login\")}>Sign In</li>\n                <li className=\"sign-up-lin\" onClick={() => CONTROLLERS.handleNavLinkClick(\"/home/register\")}>Sign Up</li>\n            </React.Fragment>)\n        }\n    }\n\n    homePageComponents = () => {\n        const featuredProducts = this.state.products.filter(\n            product => product.featured === true\n        );\n        if (this.props.history.location.pathname === \"/home\") {\n            return (\n                <React.Fragment>\n                    <NewArrivals\n                        loading={this.state.loading}\n                        products={this.state.products}\n                        onProductClick={this.handleProductClick}\n                    />\n                    <Featured\n                        featuredProducts={featuredProducts}\n                    />\n                    <Footer />\n                </React.Fragment>\n            );\n        }\n    };\n\n\n\n    render() {\n        const { history } = this.props;\n        const { products, cartProducts, searchInput, selectedCategory, userAuthenticated } = this.state;\n        if (!this.state.menuOn) {\n            return (\n                <React.Fragment>\n                    <div className=\"index-main\" ref=\"main\">\n                        <Nav\n                            history={history}\n                            products={products}\n                            cartProducts={cartProducts}\n                            userAuthenticated={this.state.userAuthenticated}\n                            menuOn = {this.state.menuOn}\n                        />\n                        {this.homePageComponents()}\n                        <Switch>\n                            <Route path=\"/home/register\" component={props => (\n                                <Register {...props}  onUserLogin={CONTROLLERS.handleUserLogin} />)} \n                            />\n                            <Route\n                                path=\"/home/login\"\n                                component={props => (\n                                    <Login {...props}\n                                        userAuthenticated={this.state.userAuthenticated}\n                                        onUserLogin={CONTROLLERS.handleUserLogin} />\n                                )}\n                            />\n                            <Route\n                                path=\"/home/reset-password\"\n                                component={props => (\n                                    <PasswordReset {...props}/>\n                                )}\n                            />\n                            <Route\n                                path=\"/home/cart\"\n                                component={props => (\n                                    <Cart\n                                        onQuantityUpdate={CONTROLLERS.handleQuantityUpdate}\n                                        onProductRemove = {CONTROLLERS.handleProductRemove}\n                                        cartProducts={cartProducts}\n                                        {...props}\n                                        userAuthenticated = {userAuthenticated}\n                                    />\n                                )}\n                            />\n                            <Route\n                                path=\"/home/search\"\n                                component={props => (\n                                    <SearchResults\n                                        products={products}\n                                        searchInput={searchInput}\n                                        onAddToCart={CONTROLLERS.handleAddToCart}\n                                        {...props}\n                                    />\n                                )}\n                            />\n                            <Route\n                                path=\"/home/products\"\n                                component={props => (\n                                    <Products\n                                        products={products}\n                                        onAddToCart={CONTROLLERS.handleAddToCart}\n                                        selectedCategory={selectedCategory}\n                                        onCategoryChange={CONTROLLERS.handleCategoryChange}\n                                        {...props}\n                                    />\n                                )}\n                            />\n                            <Route\n                                path=\"/home/contact-us\"\n                                component={props => <ContactUs {...props} />}\n                            />\n                            <Route\n                                path=\"/home/productdetails\"\n                                component={props => (\n                                    <ProductDetails\n                                        {...props}\n                                        onAddToCart={CONTROLLERS.handleAddToCart}\n                                    />\n                                )}\n                            />\n                            <Redirect from=\"/home/*\" to=\"/\" />\n                        </Switch>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <Nav\n                        history={history}\n                        products={products}\n                        cartProducts={cartProducts}\n                        userAuthenticated={this.state.userAuthenticated}\n                        menuOn = {this.state.menuOn}\n                    />\n                    <div className=\"menu-items\">\n                        <form className=\"search-form-menu\" onSubmit={CONTROLLERS.handleSearchSubmit}>\n                            <input\n                                className=\"search-field-menu\"\n                                type=\"search\"\n                                name=\"search\"\n                                onBlur={this.handleBlur}\n                                placeholder=\"     Search ...\"\n                                ref=\"searchinput\"\n                                autoFocus\n                            />\n                        </form>\n\n                        <ul className=\"nav-main-menu\" ref=\"nav\">\n                            <li className=\"products-lin\" onClick={() => CONTROLLERS.handleNavLinkClick(\"/home/products\")}>Products</li>\n                            {/* Login, logout and sign-up */}\n                            {this.menuOnAuthenticationItems()}\n                            <li className=\"contact-us-lin\" onClick={() => CONTROLLERS.handleNavLinkClick(\"/home/contact-us\")}>Contact Us</li>\n                        </ul>\n\n                    </div>\n                    <Switch>\n                        <Route\n                            path=\"/home/search\"\n                            component={props => (\n                                <SearchResults\n                                    products={products}\n                                    searchInput={searchInput}\n                                    onAddToCart={CONTROLLERS.handleAddToCart}\n                                    {...props}\n                                />\n                            )}\n                        />\n                    </Switch>\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nexport default Index;\n","import { Switch, Route, Redirect } from \"react-router-dom\";\nimport React, { Component } from \"react\";\nimport Index from \"./components/index\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/home\" component={props => <Index {...props} />} />\n        <Redirect from=\"/\" to=\"/home\" />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport WebFont from \"webfontloader\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n\nWebFont.load({\n  google: {\n    families: [\"Ubuntu\", \"Pacifico\", \"sans-serif\"]\n  }\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}